{"ast":null,"code":"'use strict';\n/* global MathJax:false */\n\nvar d3 = require('@plotly/d3');\n\nvar Lib = require('../lib');\n\nvar strTranslate = Lib.strTranslate;\n\nvar xmlnsNamespaces = require('../constants/xmlns_namespaces');\n\nvar LINE_SPACING = require('../constants/alignment').LINE_SPACING; // text converter\n\n\nvar FIND_TEX = /([^$]*)([$]+[^$]*[$]+)([^$]*)/;\n\nexports.convertToTspans = function (_context, gd, _callback) {\n  var str = _context.text(); // Until we get tex integrated more fully (so it can be used along with non-tex)\n  // allow some elements to prohibit it by attaching 'data-notex' to the original\n\n\n  var tex = !_context.attr('data-notex') && typeof MathJax !== 'undefined' && str.match(FIND_TEX);\n  var parent = d3.select(_context.node().parentNode);\n  if (parent.empty()) return;\n  var svgClass = _context.attr('class') ? _context.attr('class').split(' ')[0] : 'text';\n  svgClass += '-math';\n  parent.selectAll('svg.' + svgClass).remove();\n  parent.selectAll('g.' + svgClass + '-group').remove();\n\n  _context.style('display', null).attr({\n    // some callers use data-unformatted *from the <text> element* in 'cancel'\n    // so we need it here even if we're going to turn it into math\n    // these two (plus style and text-anchor attributes) form the key we're\n    // going to use for Drawing.bBox\n    'data-unformatted': str,\n    'data-math': 'N'\n  });\n\n  function showText() {\n    if (!parent.empty()) {\n      svgClass = _context.attr('class') + '-math';\n      parent.select('svg.' + svgClass).remove();\n    }\n\n    _context.text('').style('white-space', 'pre');\n\n    var hasLink = buildSVGText(_context.node(), str);\n\n    if (hasLink) {\n      // at least in Chrome, pointer-events does not seem\n      // to be honored in children of <text> elements\n      // so if we have an anchor, we have to make the\n      // whole element respond\n      _context.style('pointer-events', 'all');\n    }\n\n    exports.positionText(_context);\n    if (_callback) _callback.call(_context);\n  }\n\n  if (tex) {\n    (gd && gd._promises || []).push(new Promise(function (resolve) {\n      _context.style('display', 'none');\n\n      var fontSize = parseInt(_context.node().style.fontSize, 10);\n      var config = {\n        fontSize: fontSize\n      };\n      texToSVG(tex[2], config, function (_svgEl, _glyphDefs, _svgBBox) {\n        parent.selectAll('svg.' + svgClass).remove();\n        parent.selectAll('g.' + svgClass + '-group').remove();\n\n        var newSvg = _svgEl && _svgEl.select('svg');\n\n        if (!newSvg || !newSvg.node()) {\n          showText();\n          resolve();\n          return;\n        }\n\n        var mathjaxGroup = parent.append('g').classed(svgClass + '-group', true).attr({\n          'pointer-events': 'none',\n          'data-unformatted': str,\n          'data-math': 'Y'\n        });\n        mathjaxGroup.node().appendChild(newSvg.node()); // stitch the glyph defs\n\n        if (_glyphDefs && _glyphDefs.node()) {\n          newSvg.node().insertBefore(_glyphDefs.node().cloneNode(true), newSvg.node().firstChild);\n        }\n\n        var w0 = _svgBBox.width;\n        var h0 = _svgBBox.height;\n        newSvg.attr({\n          'class': svgClass,\n          height: h0,\n          preserveAspectRatio: 'xMinYMin meet'\n        }).style({\n          overflow: 'visible',\n          'pointer-events': 'none'\n        });\n        var fill = _context.node().style.fill || 'black';\n        var g = newSvg.select('g');\n        g.attr({\n          fill: fill,\n          stroke: fill\n        });\n        var bb = g.node().getBoundingClientRect();\n        var w = bb.width;\n        var h = bb.height;\n\n        if (w > w0 || h > h0) {\n          // this happen in firefox v82+ | see https://bugzilla.mozilla.org/show_bug.cgi?id=1709251 addressed\n          // temporary fix:\n          newSvg.style('overflow', 'hidden');\n          bb = newSvg.node().getBoundingClientRect();\n          w = bb.width;\n          h = bb.height;\n        }\n\n        var x = +_context.attr('x');\n        var y = +_context.attr('y'); // font baseline is about 1/4 fontSize below centerline\n\n        var textHeight = fontSize || _context.node().getBoundingClientRect().height;\n\n        var dy = -textHeight / 4;\n\n        if (svgClass[0] === 'y') {\n          mathjaxGroup.attr({\n            transform: 'rotate(' + [-90, x, y] + ')' + strTranslate(-w / 2, dy - h / 2)\n          });\n        } else if (svgClass[0] === 'l') {\n          y = dy - h / 2;\n        } else if (svgClass[0] === 'a' && svgClass.indexOf('atitle') !== 0) {\n          x = 0;\n          y = dy;\n        } else {\n          var anchor = _context.attr('text-anchor');\n\n          x = x - w * (anchor === 'middle' ? 0.5 : anchor === 'end' ? 1 : 0);\n          y = y + dy - h / 2;\n        }\n\n        newSvg.attr({\n          x: x,\n          y: y\n        });\n        if (_callback) _callback.call(_context, mathjaxGroup);\n        resolve(mathjaxGroup);\n      });\n    }));\n  } else showText();\n\n  return _context;\n}; // MathJax\n\n\nvar LT_MATCH = /(<|&lt;|&#60;)/g;\nvar GT_MATCH = /(>|&gt;|&#62;)/g;\n\nfunction cleanEscapesForTex(s) {\n  return s.replace(LT_MATCH, '\\\\lt ').replace(GT_MATCH, '\\\\gt ');\n}\n\nfunction texToSVG(_texString, _config, _callback) {\n  var originalRenderer, originalConfig, originalProcessSectionDelay, tmpDiv;\n  MathJax.Hub.Queue(function () {\n    originalConfig = Lib.extendDeepAll({}, MathJax.Hub.config);\n    originalProcessSectionDelay = MathJax.Hub.processSectionDelay;\n\n    if (MathJax.Hub.processSectionDelay !== undefined) {\n      // MathJax 2.5+\n      MathJax.Hub.processSectionDelay = 0;\n    }\n\n    return MathJax.Hub.Config({\n      messageStyle: 'none',\n      tex2jax: {\n        inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]\n      },\n      displayAlign: 'left'\n    });\n  }, function () {\n    // Get original renderer\n    originalRenderer = MathJax.Hub.config.menuSettings.renderer;\n\n    if (originalRenderer !== 'SVG') {\n      return MathJax.Hub.setRenderer('SVG');\n    }\n  }, function () {\n    var randomID = 'math-output-' + Lib.randstr({}, 64);\n    tmpDiv = d3.select('body').append('div').attr({\n      id: randomID\n    }).style({\n      visibility: 'hidden',\n      position: 'absolute'\n    }).style({\n      'font-size': _config.fontSize + 'px'\n    }).text(cleanEscapesForTex(_texString));\n    return MathJax.Hub.Typeset(tmpDiv.node());\n  }, function () {\n    var glyphDefs = d3.select('body').select('#MathJax_SVG_glyphs');\n\n    if (tmpDiv.select('.MathJax_SVG').empty() || !tmpDiv.select('svg').node()) {\n      Lib.log('There was an error in the tex syntax.', _texString);\n\n      _callback();\n    } else {\n      var svgBBox = tmpDiv.select('svg').node().getBoundingClientRect();\n\n      _callback(tmpDiv.select('.MathJax_SVG'), glyphDefs, svgBBox);\n    }\n\n    tmpDiv.remove();\n\n    if (originalRenderer !== 'SVG') {\n      return MathJax.Hub.setRenderer(originalRenderer);\n    }\n  }, function () {\n    if (originalProcessSectionDelay !== undefined) {\n      MathJax.Hub.processSectionDelay = originalProcessSectionDelay;\n    }\n\n    return MathJax.Hub.Config(originalConfig);\n  });\n}\n\nvar TAG_STYLES = {\n  // would like to use baseline-shift for sub/sup but FF doesn't support it\n  // so we need to use dy along with the uber hacky shift-back-to\n  // baseline below\n  sup: 'font-size:70%',\n  sub: 'font-size:70%',\n  b: 'font-weight:bold',\n  i: 'font-style:italic',\n  a: 'cursor:pointer',\n  span: '',\n  em: 'font-style:italic;font-weight:bold'\n}; // baseline shifts for sub and sup\n\nvar SHIFT_DY = {\n  sub: '0.3em',\n  sup: '-0.6em'\n}; // reset baseline by adding a tspan (empty except for a zero-width space)\n// with dy of -70% * SHIFT_DY (because font-size=70%)\n\nvar RESET_DY = {\n  sub: '-0.21em',\n  sup: '0.42em'\n};\nvar ZERO_WIDTH_SPACE = '\\u200b';\n/*\n * Whitelist of protocols in user-supplied urls. Mostly we want to avoid javascript\n * and related attack vectors. The empty items are there for IE, that in various\n * versions treats relative paths as having different flavors of no protocol, while\n * other browsers have these explicitly inherit the protocol of the page they're in.\n */\n\nvar PROTOCOLS = ['http:', 'https:', 'mailto:', '', undefined, ':'];\nvar NEWLINES = exports.NEWLINES = /(\\r\\n?|\\n)/g;\nvar SPLIT_TAGS = /(<[^<>]*>)/;\nvar ONE_TAG = /<(\\/?)([^ >]*)(\\s+(.*))?>/i;\nvar BR_TAG = /<br(\\s+.*)?>/i;\nexports.BR_TAG_ALL = /<br(\\s+.*)?>/gi;\n/*\n * style and href: pull them out of either single or double quotes. Also\n * - target: (_blank|_self|_parent|_top|framename)\n *     note that you can't use target to get a popup but if you use popup,\n *     a `framename` will be passed along as the name of the popup window.\n *     per the spec, cannot contain whitespace.\n *     for backward compatibility we default to '_blank'\n * - popup: a custom one for us to enable popup (new window) links. String\n *     for window.open -> strWindowFeatures, like 'menubar=yes,width=500,height=550'\n *     note that at least in Chrome, you need to give at least one property\n *     in this string or the page will open in a new tab anyway. We follow this\n *     convention and will not make a popup if this string is empty.\n *     per the spec, cannot contain whitespace.\n *\n * Because we hack in other attributes with style (sub & sup), drop any trailing\n * semicolon in user-supplied styles so we can consistently append the tag-dependent style\n *\n * These are for tag attributes; Chrome anyway will convert entities in\n * attribute values, but not in attribute names\n * you can test this by for example:\n * > p = document.createElement('p')\n * > p.innerHTML = '<span styl&#x65;=\"font-color:r&#x65;d;\">Hi</span>'\n * > p.innerHTML\n * <- '<span styl&#x65;=\"font-color:red;\">Hi</span>'\n */\n\nvar STYLEMATCH = /(^|[\\s\"'])style\\s*=\\s*(\"([^\"]*);?\"|'([^']*);?')/i;\nvar HREFMATCH = /(^|[\\s\"'])href\\s*=\\s*(\"([^\"]*)\"|'([^']*)')/i;\nvar TARGETMATCH = /(^|[\\s\"'])target\\s*=\\s*(\"([^\"\\s]*)\"|'([^'\\s]*)')/i;\nvar POPUPMATCH = /(^|[\\s\"'])popup\\s*=\\s*(\"([\\w=,]*)\"|'([\\w=,]*)')/i; // dedicated matcher for these quoted regexes, that can return their results\n// in two different places\n\nfunction getQuotedMatch(_str, re) {\n  if (!_str) return null;\n\n  var match = _str.match(re);\n\n  var result = match && (match[3] || match[4]);\n  return result && convertEntities(result);\n}\n\nvar COLORMATCH = /(^|;)\\s*color:/;\n/**\n * Strip string of tags\n *\n * @param {string} _str : input string\n * @param {object} opts :\n * - len {number} max length of output string\n * - allowedTags {array} list of pseudo-html tags to NOT strip\n * @return {string}\n */\n\nexports.plainText = function (_str, opts) {\n  opts = opts || {};\n  var len = opts.len !== undefined && opts.len !== -1 ? opts.len : Infinity;\n  var allowedTags = opts.allowedTags !== undefined ? opts.allowedTags : ['br'];\n  var ellipsis = '...';\n  var eLen = ellipsis.length;\n\n  var oldParts = _str.split(SPLIT_TAGS);\n\n  var newParts = [];\n  var prevTag = '';\n  var l = 0;\n\n  for (var i = 0; i < oldParts.length; i++) {\n    var p = oldParts[i];\n    var match = p.match(ONE_TAG);\n    var tagType = match && match[2].toLowerCase();\n\n    if (tagType) {\n      // N.B. tags do not count towards string length\n      if (allowedTags.indexOf(tagType) !== -1) {\n        newParts.push(p);\n        prevTag = tagType;\n      }\n    } else {\n      var pLen = p.length;\n\n      if (l + pLen < len) {\n        newParts.push(p);\n        l += pLen;\n      } else if (l < len) {\n        var pLen2 = len - l;\n\n        if (prevTag && (prevTag !== 'br' || pLen2 <= eLen || pLen <= eLen)) {\n          newParts.pop();\n        }\n\n        if (len > eLen) {\n          newParts.push(p.substr(0, pLen2 - eLen) + ellipsis);\n        } else {\n          newParts.push(p.substr(0, pLen2));\n        }\n\n        break;\n      }\n\n      prevTag = '';\n    }\n  }\n\n  return newParts.join('');\n};\n/*\n * N.B. HTML entities are listed without the leading '&' and trailing ';'\n * https://www.freeformatter.com/html-entities.html\n *\n * FWIW if we wanted to support the full set, it has 2261 entries:\n * https://www.w3.org/TR/html5/entities.json\n * though I notice that some of these are duplicates and/or are missing \";\"\n * eg: \"&amp;\", \"&amp\", \"&AMP;\", and \"&AMP\" all map to \"&\"\n * We no longer need to include numeric entities here, these are now handled\n * by String.fromCodePoint/fromCharCode\n *\n * Anyway the only ones that are really important to allow are the HTML special\n * chars <, >, and &, because these ones can trigger special processing if not\n * replaced by the corresponding entity.\n */\n\n\nvar entityToUnicode = {\n  mu: 'μ',\n  amp: '&',\n  lt: '<',\n  gt: '>',\n  nbsp: ' ',\n  times: '×',\n  plusmn: '±',\n  deg: '°'\n}; // NOTE: in general entities can contain uppercase too (so [a-zA-Z]) but all the\n// ones we support use only lowercase. If we ever change that, update the regex.\n\nvar ENTITY_MATCH = /&(#\\d+|#x[\\da-fA-F]+|[a-z]+);/g;\n\nfunction convertEntities(_str) {\n  return _str.replace(ENTITY_MATCH, function (fullMatch, innerMatch) {\n    var outChar;\n\n    if (innerMatch.charAt(0) === '#') {\n      // cannot use String.fromCodePoint in IE\n      outChar = fromCodePoint(innerMatch.charAt(1) === 'x' ? parseInt(innerMatch.substr(2), 16) : parseInt(innerMatch.substr(1), 10));\n    } else outChar = entityToUnicode[innerMatch]; // as in regular HTML, if we didn't decode the entity just\n    // leave the raw text in place.\n\n\n    return outChar || fullMatch;\n  });\n}\n\nexports.convertEntities = convertEntities;\n\nfunction fromCodePoint(code) {\n  // Don't allow overflow. In Chrome this turns into � but I feel like it's\n  // more useful to just not convert it at all.\n  if (code > 0x10FFFF) return;\n  var stringFromCodePoint = String.fromCodePoint;\n  if (stringFromCodePoint) return stringFromCodePoint(code); // IE doesn't have String.fromCodePoint\n  // see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint\n\n  var stringFromCharCode = String.fromCharCode;\n  if (code <= 0xFFFF) return stringFromCharCode(code);\n  return stringFromCharCode((code >> 10) + 0xD7C0, code % 0x400 + 0xDC00);\n}\n/*\n * buildSVGText: convert our pseudo-html into SVG tspan elements, and attach these\n * to containerNode\n *\n * @param {svg text element} containerNode: the <text> node to insert this text into\n * @param {string} str: the pseudo-html string to convert to svg\n *\n * @returns {bool}: does the result contain any links? We need to handle the text element\n *   somewhat differently if it does, so just keep track of this when it happens.\n */\n\n\nfunction buildSVGText(containerNode, str) {\n  /*\n   * Normalize behavior between IE and others wrt newlines and whitespace:pre\n   * this combination makes IE barf https://github.com/plotly/plotly.js/issues/746\n   * Chrome and FF display \\n, \\r, or \\r\\n as a space in this mode.\n   * I feel like at some point we turned these into <br> but currently we don't so\n   * I'm just going to cement what we do now in Chrome and FF\n   */\n  str = str.replace(NEWLINES, ' ');\n  var hasLink = false; // as we're building the text, keep track of what elements we're nested inside\n  // nodeStack will be an array of {node, type, style, href, target, popup}\n  // where only type: 'a' gets the last 3 and node is only added when it's created\n\n  var nodeStack = [];\n  var currentNode;\n  var currentLine = -1;\n\n  function newLine() {\n    currentLine++;\n    var lineNode = document.createElementNS(xmlnsNamespaces.svg, 'tspan');\n    d3.select(lineNode).attr({\n      class: 'line',\n      dy: currentLine * LINE_SPACING + 'em'\n    });\n    containerNode.appendChild(lineNode);\n    currentNode = lineNode;\n    var oldNodeStack = nodeStack;\n    nodeStack = [{\n      node: lineNode\n    }];\n\n    if (oldNodeStack.length > 1) {\n      for (var i = 1; i < oldNodeStack.length; i++) {\n        enterNode(oldNodeStack[i]);\n      }\n    }\n  }\n\n  function enterNode(nodeSpec) {\n    var type = nodeSpec.type;\n    var nodeAttrs = {};\n    var nodeType;\n\n    if (type === 'a') {\n      nodeType = 'a';\n      var target = nodeSpec.target;\n      var href = nodeSpec.href;\n      var popup = nodeSpec.popup;\n\n      if (href) {\n        nodeAttrs = {\n          'xlink:xlink:show': target === '_blank' || target.charAt(0) !== '_' ? 'new' : 'replace',\n          target: target,\n          'xlink:xlink:href': href\n        };\n\n        if (popup) {\n          // security: href and target are not inserted as code but\n          // as attributes. popup is, but limited to /[A-Za-z0-9_=,]/\n          nodeAttrs.onclick = 'window.open(this.href.baseVal,this.target.baseVal,\"' + popup + '\");return false;';\n        }\n      }\n    } else nodeType = 'tspan';\n\n    if (nodeSpec.style) nodeAttrs.style = nodeSpec.style;\n    var newNode = document.createElementNS(xmlnsNamespaces.svg, nodeType);\n\n    if (type === 'sup' || type === 'sub') {\n      addTextNode(currentNode, ZERO_WIDTH_SPACE);\n      currentNode.appendChild(newNode);\n      var resetter = document.createElementNS(xmlnsNamespaces.svg, 'tspan');\n      addTextNode(resetter, ZERO_WIDTH_SPACE);\n      d3.select(resetter).attr('dy', RESET_DY[type]);\n      nodeAttrs.dy = SHIFT_DY[type];\n      currentNode.appendChild(newNode);\n      currentNode.appendChild(resetter);\n    } else {\n      currentNode.appendChild(newNode);\n    }\n\n    d3.select(newNode).attr(nodeAttrs);\n    currentNode = nodeSpec.node = newNode;\n    nodeStack.push(nodeSpec);\n  }\n\n  function addTextNode(node, text) {\n    node.appendChild(document.createTextNode(text));\n  }\n\n  function exitNode(type) {\n    // A bare closing tag can't close the root node. If we encounter this it\n    // means there's an extra closing tag that can just be ignored:\n    if (nodeStack.length === 1) {\n      Lib.log('Ignoring unexpected end tag </' + type + '>.', str);\n      return;\n    }\n\n    var innerNode = nodeStack.pop();\n\n    if (type !== innerNode.type) {\n      Lib.log('Start tag <' + innerNode.type + '> doesnt match end tag <' + type + '>. Pretending it did match.', str);\n    }\n\n    currentNode = nodeStack[nodeStack.length - 1].node;\n  }\n\n  var hasLines = BR_TAG.test(str);\n  if (hasLines) newLine();else {\n    currentNode = containerNode;\n    nodeStack = [{\n      node: containerNode\n    }];\n  }\n  var parts = str.split(SPLIT_TAGS);\n\n  for (var i = 0; i < parts.length; i++) {\n    var parti = parts[i];\n    var match = parti.match(ONE_TAG);\n    var tagType = match && match[2].toLowerCase();\n    var tagStyle = TAG_STYLES[tagType];\n\n    if (tagType === 'br') {\n      newLine();\n    } else if (tagStyle === undefined) {\n      addTextNode(currentNode, convertEntities(parti));\n    } else {\n      // tag - open or close\n      if (match[1]) {\n        exitNode(tagType);\n      } else {\n        var extra = match[4];\n        var nodeSpec = {\n          type: tagType\n        }; // now add style, from both the tag name and any extra css\n        // Most of the svg css that users will care about is just like html,\n        // but font color is different (uses fill). Let our users ignore this.\n\n        var css = getQuotedMatch(extra, STYLEMATCH);\n\n        if (css) {\n          css = css.replace(COLORMATCH, '$1 fill:');\n          if (tagStyle) css += ';' + tagStyle;\n        } else if (tagStyle) css = tagStyle;\n\n        if (css) nodeSpec.style = css;\n\n        if (tagType === 'a') {\n          hasLink = true;\n          var href = getQuotedMatch(extra, HREFMATCH);\n\n          if (href) {\n            var safeHref = sanitizeHref(href);\n\n            if (safeHref) {\n              nodeSpec.href = safeHref;\n              nodeSpec.target = getQuotedMatch(extra, TARGETMATCH) || '_blank';\n              nodeSpec.popup = getQuotedMatch(extra, POPUPMATCH);\n            }\n          }\n        }\n\n        enterNode(nodeSpec);\n      }\n    }\n  }\n\n  return hasLink;\n}\n\nfunction sanitizeHref(href) {\n  var decodedHref = encodeURI(decodeURI(href));\n  var dummyAnchor1 = document.createElement('a');\n  var dummyAnchor2 = document.createElement('a');\n  dummyAnchor1.href = href;\n  dummyAnchor2.href = decodedHref;\n  var p1 = dummyAnchor1.protocol;\n  var p2 = dummyAnchor2.protocol; // check safe protocols\n\n  if (PROTOCOLS.indexOf(p1) !== -1 && PROTOCOLS.indexOf(p2) !== -1) {\n    return decodedHref;\n  } else {\n    return '';\n  }\n}\n/*\n * sanitizeHTML: port of buildSVGText aimed at providing a clean subset of HTML\n * @param {string} str: the html string to clean\n * @returns {string}: a cleaned and normalized version of the input,\n *     supporting only a small subset of html\n */\n\n\nexports.sanitizeHTML = function sanitizeHTML(str) {\n  str = str.replace(NEWLINES, ' ');\n  var rootNode = document.createElement('p');\n  var currentNode = rootNode;\n  var nodeStack = [];\n  var parts = str.split(SPLIT_TAGS);\n\n  for (var i = 0; i < parts.length; i++) {\n    var parti = parts[i];\n    var match = parti.match(ONE_TAG);\n    var tagType = match && match[2].toLowerCase();\n\n    if (tagType in TAG_STYLES) {\n      if (match[1]) {\n        if (nodeStack.length) {\n          currentNode = nodeStack.pop();\n        }\n      } else {\n        var extra = match[4];\n        var css = getQuotedMatch(extra, STYLEMATCH);\n        var nodeAttrs = css ? {\n          style: css\n        } : {};\n\n        if (tagType === 'a') {\n          var href = getQuotedMatch(extra, HREFMATCH);\n\n          if (href) {\n            var safeHref = sanitizeHref(href);\n\n            if (safeHref) {\n              nodeAttrs.href = safeHref;\n              var target = getQuotedMatch(extra, TARGETMATCH);\n\n              if (target) {\n                nodeAttrs.target = target;\n              }\n            }\n          }\n        }\n\n        var newNode = document.createElement(tagType);\n        currentNode.appendChild(newNode);\n        d3.select(newNode).attr(nodeAttrs);\n        currentNode = newNode;\n        nodeStack.push(newNode);\n      }\n    } else {\n      currentNode.appendChild(document.createTextNode(convertEntities(parti)));\n    }\n  }\n\n  var key = 'innerHTML'; // i.e. to avoid pass test-syntax\n\n  return rootNode[key];\n};\n\nexports.lineCount = function lineCount(s) {\n  return s.selectAll('tspan.line').size() || 1;\n};\n\nexports.positionText = function positionText(s, x, y) {\n  return s.each(function () {\n    var text = d3.select(this);\n\n    function setOrGet(attr, val) {\n      if (val === undefined) {\n        val = text.attr(attr);\n\n        if (val === null) {\n          text.attr(attr, 0);\n          val = 0;\n        }\n      } else text.attr(attr, val);\n\n      return val;\n    }\n\n    var thisX = setOrGet('x', x);\n    var thisY = setOrGet('y', y);\n\n    if (this.nodeName === 'text') {\n      text.selectAll('tspan.line').attr({\n        x: thisX,\n        y: thisY\n      });\n    }\n  });\n};\n\nfunction alignHTMLWith(_base, container, options) {\n  var alignH = options.horizontalAlign;\n  var alignV = options.verticalAlign || 'top';\n\n  var bRect = _base.node().getBoundingClientRect();\n\n  var cRect = container.node().getBoundingClientRect();\n  var thisRect;\n  var getTop;\n  var getLeft;\n\n  if (alignV === 'bottom') {\n    getTop = function () {\n      return bRect.bottom - thisRect.height;\n    };\n  } else if (alignV === 'middle') {\n    getTop = function () {\n      return bRect.top + (bRect.height - thisRect.height) / 2;\n    };\n  } else {\n    // default: top\n    getTop = function () {\n      return bRect.top;\n    };\n  }\n\n  if (alignH === 'right') {\n    getLeft = function () {\n      return bRect.right - thisRect.width;\n    };\n  } else if (alignH === 'center') {\n    getLeft = function () {\n      return bRect.left + (bRect.width - thisRect.width) / 2;\n    };\n  } else {\n    // default: left\n    getLeft = function () {\n      return bRect.left;\n    };\n  }\n\n  return function () {\n    thisRect = this.node().getBoundingClientRect();\n    var x0 = getLeft() - cRect.left;\n    var y0 = getTop() - cRect.top;\n    var gd = options.gd || {};\n\n    if (options.gd) {\n      gd._fullLayout._calcInverseTransform(gd);\n\n      var transformedCoords = Lib.apply3DTransform(gd._fullLayout._invTransform)(x0, y0);\n      x0 = transformedCoords[0];\n      y0 = transformedCoords[1];\n    }\n\n    this.style({\n      top: y0 + 'px',\n      left: x0 + 'px',\n      'z-index': 1000\n    });\n    return this;\n  };\n}\n\nvar onePx = '1px ';\n\nexports.makeTextShadow = function (color) {\n  var x = onePx;\n  var y = onePx;\n  var b = onePx;\n  return x + y + b + color + ', ' + '-' + x + '-' + y + b + color + ', ' + x + '-' + y + b + color + ', ' + '-' + x + y + b + color;\n};\n/*\n * Editable title\n * @param {d3.selection} context: the element being edited. Normally text,\n *   but if it isn't, you should provide the styling options\n * @param {object} options:\n *   @param {div} options.gd: graphDiv\n *   @param {d3.selection} options.delegate: item to bind events to if not this\n *   @param {boolean} options.immediate: start editing now (true) or on click (false, default)\n *   @param {string} options.fill: font color if not as shown\n *   @param {string} options.background: background color if not as shown\n *   @param {string} options.text: initial text, if not as shown\n *   @param {string} options.horizontalAlign: alignment of the edit box wrt. the bound element\n *   @param {string} options.verticalAlign: alignment of the edit box wrt. the bound element\n */\n\n\nexports.makeEditable = function (context, options) {\n  var gd = options.gd;\n  var _delegate = options.delegate;\n  var dispatch = d3.dispatch('edit', 'input', 'cancel');\n  var handlerElement = _delegate || context;\n  context.style({\n    'pointer-events': _delegate ? 'none' : 'all'\n  });\n  if (context.size() !== 1) throw new Error('boo');\n\n  function handleClick() {\n    appendEditable();\n    context.style({\n      opacity: 0\n    }); // also hide any mathjax svg\n\n    var svgClass = handlerElement.attr('class');\n    var mathjaxClass;\n    if (svgClass) mathjaxClass = '.' + svgClass.split(' ')[0] + '-math-group';else mathjaxClass = '[class*=-math-group]';\n\n    if (mathjaxClass) {\n      d3.select(context.node().parentNode).select(mathjaxClass).style({\n        opacity: 0\n      });\n    }\n  }\n\n  function selectElementContents(_el) {\n    var el = _el.node();\n\n    var range = document.createRange();\n    range.selectNodeContents(el);\n    var sel = window.getSelection();\n    sel.removeAllRanges();\n    sel.addRange(range);\n    el.focus();\n  }\n\n  function appendEditable() {\n    var plotDiv = d3.select(gd);\n    var container = plotDiv.select('.svg-container');\n    var div = container.append('div');\n    var cStyle = context.node().style;\n    var fontSize = parseFloat(cStyle.fontSize || 12);\n    var initialText = options.text;\n    if (initialText === undefined) initialText = context.attr('data-unformatted');\n    div.classed('plugin-editable editable', true).style({\n      position: 'absolute',\n      'font-family': cStyle.fontFamily || 'Arial',\n      'font-size': fontSize,\n      color: options.fill || cStyle.fill || 'black',\n      opacity: 1,\n      'background-color': options.background || 'transparent',\n      outline: '#ffffff33 1px solid',\n      margin: [-fontSize / 8 + 1, 0, 0, -1].join('px ') + 'px',\n      padding: '0',\n      'box-sizing': 'border-box'\n    }).attr({\n      contenteditable: true\n    }).text(initialText).call(alignHTMLWith(context, container, options)).on('blur', function () {\n      gd._editing = false;\n      context.text(this.textContent).style({\n        opacity: 1\n      });\n      var svgClass = d3.select(this).attr('class');\n      var mathjaxClass;\n      if (svgClass) mathjaxClass = '.' + svgClass.split(' ')[0] + '-math-group';else mathjaxClass = '[class*=-math-group]';\n\n      if (mathjaxClass) {\n        d3.select(context.node().parentNode).select(mathjaxClass).style({\n          opacity: 0\n        });\n      }\n\n      var text = this.textContent;\n      d3.select(this).transition().duration(0).remove();\n      d3.select(document).on('mouseup', null);\n      dispatch.edit.call(context, text);\n    }).on('focus', function () {\n      var editDiv = this;\n      gd._editing = true;\n      d3.select(document).on('mouseup', function () {\n        if (d3.event.target === editDiv) return false;\n        if (document.activeElement === div.node()) div.node().blur();\n      });\n    }).on('keyup', function () {\n      if (d3.event.which === 27) {\n        gd._editing = false;\n        context.style({\n          opacity: 1\n        });\n        d3.select(this).style({\n          opacity: 0\n        }).on('blur', function () {\n          return false;\n        }).transition().remove();\n        dispatch.cancel.call(context, this.textContent);\n      } else {\n        dispatch.input.call(context, this.textContent);\n        d3.select(this).call(alignHTMLWith(context, container, options));\n      }\n    }).on('keydown', function () {\n      if (d3.event.which === 13) this.blur();\n    }).call(selectElementContents);\n  }\n\n  if (options.immediate) handleClick();else handlerElement.on('click', handleClick);\n  return d3.rebind(context, dispatch, 'on');\n};","map":{"version":3,"sources":["C:/Users/Ajax/Desktop/Praksa/React/REACT-APP-FOR-MLC-main/node_modules/plotly.js/src/lib/svg_text_utils.js"],"names":["d3","require","Lib","strTranslate","xmlnsNamespaces","LINE_SPACING","FIND_TEX","exports","convertToTspans","_context","gd","_callback","str","text","tex","attr","MathJax","match","parent","select","node","parentNode","empty","svgClass","split","selectAll","remove","style","showText","hasLink","buildSVGText","positionText","call","_promises","push","Promise","resolve","fontSize","parseInt","config","texToSVG","_svgEl","_glyphDefs","_svgBBox","newSvg","mathjaxGroup","append","classed","appendChild","insertBefore","cloneNode","firstChild","w0","width","h0","height","preserveAspectRatio","overflow","fill","g","stroke","bb","getBoundingClientRect","w","h","x","y","textHeight","dy","transform","indexOf","anchor","LT_MATCH","GT_MATCH","cleanEscapesForTex","s","replace","_texString","_config","originalRenderer","originalConfig","originalProcessSectionDelay","tmpDiv","Hub","Queue","extendDeepAll","processSectionDelay","undefined","Config","messageStyle","tex2jax","inlineMath","displayAlign","menuSettings","renderer","setRenderer","randomID","randstr","id","visibility","position","Typeset","glyphDefs","log","svgBBox","TAG_STYLES","sup","sub","b","i","a","span","em","SHIFT_DY","RESET_DY","ZERO_WIDTH_SPACE","PROTOCOLS","NEWLINES","SPLIT_TAGS","ONE_TAG","BR_TAG","BR_TAG_ALL","STYLEMATCH","HREFMATCH","TARGETMATCH","POPUPMATCH","getQuotedMatch","_str","re","result","convertEntities","COLORMATCH","plainText","opts","len","Infinity","allowedTags","ellipsis","eLen","length","oldParts","newParts","prevTag","l","p","tagType","toLowerCase","pLen","pLen2","pop","substr","join","entityToUnicode","mu","amp","lt","gt","nbsp","times","plusmn","deg","ENTITY_MATCH","fullMatch","innerMatch","outChar","charAt","fromCodePoint","code","stringFromCodePoint","String","stringFromCharCode","fromCharCode","containerNode","nodeStack","currentNode","currentLine","newLine","lineNode","document","createElementNS","svg","class","oldNodeStack","enterNode","nodeSpec","type","nodeAttrs","nodeType","target","href","popup","onclick","newNode","addTextNode","resetter","createTextNode","exitNode","innerNode","hasLines","test","parts","parti","tagStyle","extra","css","safeHref","sanitizeHref","decodedHref","encodeURI","decodeURI","dummyAnchor1","createElement","dummyAnchor2","p1","protocol","p2","sanitizeHTML","rootNode","key","lineCount","size","each","setOrGet","val","thisX","thisY","nodeName","alignHTMLWith","_base","container","options","alignH","horizontalAlign","alignV","verticalAlign","bRect","cRect","thisRect","getTop","getLeft","bottom","top","right","left","x0","y0","_fullLayout","_calcInverseTransform","transformedCoords","apply3DTransform","_invTransform","onePx","makeTextShadow","color","makeEditable","context","_delegate","delegate","dispatch","handlerElement","Error","handleClick","appendEditable","opacity","mathjaxClass","selectElementContents","_el","el","range","createRange","selectNodeContents","sel","window","getSelection","removeAllRanges","addRange","focus","plotDiv","div","cStyle","parseFloat","initialText","fontFamily","background","outline","margin","padding","contenteditable","on","_editing","textContent","transition","duration","edit","editDiv","event","activeElement","blur","which","cancel","input","immediate","rebind"],"mappings":"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","sourcesContent":["'use strict';\n\n/* global MathJax:false */\n\nvar d3 = require('@plotly/d3');\n\nvar Lib = require('../lib');\nvar strTranslate = Lib.strTranslate;\nvar xmlnsNamespaces = require('../constants/xmlns_namespaces');\nvar LINE_SPACING = require('../constants/alignment').LINE_SPACING;\n\n// text converter\n\nvar FIND_TEX = /([^$]*)([$]+[^$]*[$]+)([^$]*)/;\n\nexports.convertToTspans = function(_context, gd, _callback) {\n    var str = _context.text();\n\n    // Until we get tex integrated more fully (so it can be used along with non-tex)\n    // allow some elements to prohibit it by attaching 'data-notex' to the original\n    var tex = (!_context.attr('data-notex')) &&\n        (typeof MathJax !== 'undefined') &&\n        str.match(FIND_TEX);\n\n    var parent = d3.select(_context.node().parentNode);\n    if(parent.empty()) return;\n    var svgClass = (_context.attr('class')) ? _context.attr('class').split(' ')[0] : 'text';\n    svgClass += '-math';\n    parent.selectAll('svg.' + svgClass).remove();\n    parent.selectAll('g.' + svgClass + '-group').remove();\n    _context.style('display', null)\n        .attr({\n            // some callers use data-unformatted *from the <text> element* in 'cancel'\n            // so we need it here even if we're going to turn it into math\n            // these two (plus style and text-anchor attributes) form the key we're\n            // going to use for Drawing.bBox\n            'data-unformatted': str,\n            'data-math': 'N'\n        });\n\n    function showText() {\n        if(!parent.empty()) {\n            svgClass = _context.attr('class') + '-math';\n            parent.select('svg.' + svgClass).remove();\n        }\n        _context.text('')\n            .style('white-space', 'pre');\n\n        var hasLink = buildSVGText(_context.node(), str);\n\n        if(hasLink) {\n            // at least in Chrome, pointer-events does not seem\n            // to be honored in children of <text> elements\n            // so if we have an anchor, we have to make the\n            // whole element respond\n            _context.style('pointer-events', 'all');\n        }\n\n        exports.positionText(_context);\n\n        if(_callback) _callback.call(_context);\n    }\n\n    if(tex) {\n        ((gd && gd._promises) || []).push(new Promise(function(resolve) {\n            _context.style('display', 'none');\n            var fontSize = parseInt(_context.node().style.fontSize, 10);\n            var config = {fontSize: fontSize};\n\n            texToSVG(tex[2], config, function(_svgEl, _glyphDefs, _svgBBox) {\n                parent.selectAll('svg.' + svgClass).remove();\n                parent.selectAll('g.' + svgClass + '-group').remove();\n\n                var newSvg = _svgEl && _svgEl.select('svg');\n                if(!newSvg || !newSvg.node()) {\n                    showText();\n                    resolve();\n                    return;\n                }\n\n                var mathjaxGroup = parent.append('g')\n                    .classed(svgClass + '-group', true)\n                    .attr({\n                        'pointer-events': 'none',\n                        'data-unformatted': str,\n                        'data-math': 'Y'\n                    });\n\n                mathjaxGroup.node().appendChild(newSvg.node());\n\n                // stitch the glyph defs\n                if(_glyphDefs && _glyphDefs.node()) {\n                    newSvg.node().insertBefore(_glyphDefs.node().cloneNode(true),\n                                               newSvg.node().firstChild);\n                }\n\n                var w0 = _svgBBox.width;\n                var h0 = _svgBBox.height;\n\n                newSvg.attr({\n                    'class': svgClass,\n                    height: h0,\n                    preserveAspectRatio: 'xMinYMin meet'\n                })\n                .style({overflow: 'visible', 'pointer-events': 'none'});\n\n                var fill = _context.node().style.fill || 'black';\n                var g = newSvg.select('g');\n                g.attr({fill: fill, stroke: fill});\n\n                var bb = g.node().getBoundingClientRect();\n                var w = bb.width;\n                var h = bb.height;\n\n                if(w > w0 || h > h0) {\n                    // this happen in firefox v82+ | see https://bugzilla.mozilla.org/show_bug.cgi?id=1709251 addressed\n                    // temporary fix:\n                    newSvg.style('overflow', 'hidden');\n                    bb = newSvg.node().getBoundingClientRect();\n                    w = bb.width;\n                    h = bb.height;\n                }\n\n                var x = +_context.attr('x');\n                var y = +_context.attr('y');\n\n                // font baseline is about 1/4 fontSize below centerline\n                var textHeight = fontSize || _context.node().getBoundingClientRect().height;\n                var dy = -textHeight / 4;\n\n                if(svgClass[0] === 'y') {\n                    mathjaxGroup.attr({\n                        transform: 'rotate(' + [-90, x, y] +\n                        ')' + strTranslate(-w / 2, dy - h / 2)\n                    });\n                } else if(svgClass[0] === 'l') {\n                    y = dy - h / 2;\n                } else if(svgClass[0] === 'a' && svgClass.indexOf('atitle') !== 0) {\n                    x = 0;\n                    y = dy;\n                } else {\n                    var anchor = _context.attr('text-anchor');\n\n                    x = x - w * (\n                        anchor === 'middle' ? 0.5 :\n                        anchor === 'end' ? 1 : 0\n                    );\n                    y = y + dy - h / 2;\n                }\n\n                newSvg.attr({\n                    x: x,\n                    y: y\n                });\n\n                if(_callback) _callback.call(_context, mathjaxGroup);\n                resolve(mathjaxGroup);\n            });\n        }));\n    } else showText();\n\n    return _context;\n};\n\n\n// MathJax\n\nvar LT_MATCH = /(<|&lt;|&#60;)/g;\nvar GT_MATCH = /(>|&gt;|&#62;)/g;\n\nfunction cleanEscapesForTex(s) {\n    return s.replace(LT_MATCH, '\\\\lt ')\n        .replace(GT_MATCH, '\\\\gt ');\n}\n\nfunction texToSVG(_texString, _config, _callback) {\n    var originalRenderer,\n        originalConfig,\n        originalProcessSectionDelay,\n        tmpDiv;\n\n    MathJax.Hub.Queue(\n    function() {\n        originalConfig = Lib.extendDeepAll({}, MathJax.Hub.config);\n\n        originalProcessSectionDelay = MathJax.Hub.processSectionDelay;\n        if(MathJax.Hub.processSectionDelay !== undefined) {\n            // MathJax 2.5+\n            MathJax.Hub.processSectionDelay = 0;\n        }\n\n        return MathJax.Hub.Config({\n            messageStyle: 'none',\n            tex2jax: {\n                inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]\n            },\n            displayAlign: 'left',\n        });\n    },\n    function() {\n        // Get original renderer\n        originalRenderer = MathJax.Hub.config.menuSettings.renderer;\n        if(originalRenderer !== 'SVG') {\n            return MathJax.Hub.setRenderer('SVG');\n        }\n    },\n    function() {\n        var randomID = 'math-output-' + Lib.randstr({}, 64);\n        tmpDiv = d3.select('body').append('div')\n            .attr({id: randomID})\n            .style({visibility: 'hidden', position: 'absolute'})\n            .style({'font-size': _config.fontSize + 'px'})\n            .text(cleanEscapesForTex(_texString));\n\n        return MathJax.Hub.Typeset(tmpDiv.node());\n    },\n    function() {\n        var glyphDefs = d3.select('body').select('#MathJax_SVG_glyphs');\n\n        if(tmpDiv.select('.MathJax_SVG').empty() || !tmpDiv.select('svg').node()) {\n            Lib.log('There was an error in the tex syntax.', _texString);\n            _callback();\n        } else {\n            var svgBBox = tmpDiv.select('svg').node().getBoundingClientRect();\n            _callback(tmpDiv.select('.MathJax_SVG'), glyphDefs, svgBBox);\n        }\n\n        tmpDiv.remove();\n\n        if(originalRenderer !== 'SVG') {\n            return MathJax.Hub.setRenderer(originalRenderer);\n        }\n    },\n    function() {\n        if(originalProcessSectionDelay !== undefined) {\n            MathJax.Hub.processSectionDelay = originalProcessSectionDelay;\n        }\n        return MathJax.Hub.Config(originalConfig);\n    });\n}\n\nvar TAG_STYLES = {\n    // would like to use baseline-shift for sub/sup but FF doesn't support it\n    // so we need to use dy along with the uber hacky shift-back-to\n    // baseline below\n    sup: 'font-size:70%',\n    sub: 'font-size:70%',\n    b: 'font-weight:bold',\n    i: 'font-style:italic',\n    a: 'cursor:pointer',\n    span: '',\n    em: 'font-style:italic;font-weight:bold'\n};\n\n// baseline shifts for sub and sup\nvar SHIFT_DY = {\n    sub: '0.3em',\n    sup: '-0.6em'\n};\n// reset baseline by adding a tspan (empty except for a zero-width space)\n// with dy of -70% * SHIFT_DY (because font-size=70%)\nvar RESET_DY = {\n    sub: '-0.21em',\n    sup: '0.42em'\n};\nvar ZERO_WIDTH_SPACE = '\\u200b';\n\n/*\n * Whitelist of protocols in user-supplied urls. Mostly we want to avoid javascript\n * and related attack vectors. The empty items are there for IE, that in various\n * versions treats relative paths as having different flavors of no protocol, while\n * other browsers have these explicitly inherit the protocol of the page they're in.\n */\nvar PROTOCOLS = ['http:', 'https:', 'mailto:', '', undefined, ':'];\n\nvar NEWLINES = exports.NEWLINES = /(\\r\\n?|\\n)/g;\n\nvar SPLIT_TAGS = /(<[^<>]*>)/;\n\nvar ONE_TAG = /<(\\/?)([^ >]*)(\\s+(.*))?>/i;\n\nvar BR_TAG = /<br(\\s+.*)?>/i;\nexports.BR_TAG_ALL = /<br(\\s+.*)?>/gi;\n\n/*\n * style and href: pull them out of either single or double quotes. Also\n * - target: (_blank|_self|_parent|_top|framename)\n *     note that you can't use target to get a popup but if you use popup,\n *     a `framename` will be passed along as the name of the popup window.\n *     per the spec, cannot contain whitespace.\n *     for backward compatibility we default to '_blank'\n * - popup: a custom one for us to enable popup (new window) links. String\n *     for window.open -> strWindowFeatures, like 'menubar=yes,width=500,height=550'\n *     note that at least in Chrome, you need to give at least one property\n *     in this string or the page will open in a new tab anyway. We follow this\n *     convention and will not make a popup if this string is empty.\n *     per the spec, cannot contain whitespace.\n *\n * Because we hack in other attributes with style (sub & sup), drop any trailing\n * semicolon in user-supplied styles so we can consistently append the tag-dependent style\n *\n * These are for tag attributes; Chrome anyway will convert entities in\n * attribute values, but not in attribute names\n * you can test this by for example:\n * > p = document.createElement('p')\n * > p.innerHTML = '<span styl&#x65;=\"font-color:r&#x65;d;\">Hi</span>'\n * > p.innerHTML\n * <- '<span styl&#x65;=\"font-color:red;\">Hi</span>'\n */\nvar STYLEMATCH = /(^|[\\s\"'])style\\s*=\\s*(\"([^\"]*);?\"|'([^']*);?')/i;\nvar HREFMATCH = /(^|[\\s\"'])href\\s*=\\s*(\"([^\"]*)\"|'([^']*)')/i;\nvar TARGETMATCH = /(^|[\\s\"'])target\\s*=\\s*(\"([^\"\\s]*)\"|'([^'\\s]*)')/i;\nvar POPUPMATCH = /(^|[\\s\"'])popup\\s*=\\s*(\"([\\w=,]*)\"|'([\\w=,]*)')/i;\n\n// dedicated matcher for these quoted regexes, that can return their results\n// in two different places\nfunction getQuotedMatch(_str, re) {\n    if(!_str) return null;\n    var match = _str.match(re);\n    var result = match && (match[3] || match[4]);\n    return result && convertEntities(result);\n}\n\nvar COLORMATCH = /(^|;)\\s*color:/;\n\n/**\n * Strip string of tags\n *\n * @param {string} _str : input string\n * @param {object} opts :\n * - len {number} max length of output string\n * - allowedTags {array} list of pseudo-html tags to NOT strip\n * @return {string}\n */\nexports.plainText = function(_str, opts) {\n    opts = opts || {};\n\n    var len = (opts.len !== undefined && opts.len !== -1) ? opts.len : Infinity;\n    var allowedTags = opts.allowedTags !== undefined ? opts.allowedTags : ['br'];\n\n    var ellipsis = '...';\n    var eLen = ellipsis.length;\n\n    var oldParts = _str.split(SPLIT_TAGS);\n    var newParts = [];\n    var prevTag = '';\n    var l = 0;\n\n    for(var i = 0; i < oldParts.length; i++) {\n        var p = oldParts[i];\n        var match = p.match(ONE_TAG);\n        var tagType = match && match[2].toLowerCase();\n\n        if(tagType) {\n            // N.B. tags do not count towards string length\n            if(allowedTags.indexOf(tagType) !== -1) {\n                newParts.push(p);\n                prevTag = tagType;\n            }\n        } else {\n            var pLen = p.length;\n\n            if((l + pLen) < len) {\n                newParts.push(p);\n                l += pLen;\n            } else if(l < len) {\n                var pLen2 = len - l;\n\n                if(prevTag && (prevTag !== 'br' || pLen2 <= eLen || pLen <= eLen)) {\n                    newParts.pop();\n                }\n\n                if(len > eLen) {\n                    newParts.push(p.substr(0, pLen2 - eLen) + ellipsis);\n                } else {\n                    newParts.push(p.substr(0, pLen2));\n                }\n                break;\n            }\n\n            prevTag = '';\n        }\n    }\n\n    return newParts.join('');\n};\n\n/*\n * N.B. HTML entities are listed without the leading '&' and trailing ';'\n * https://www.freeformatter.com/html-entities.html\n *\n * FWIW if we wanted to support the full set, it has 2261 entries:\n * https://www.w3.org/TR/html5/entities.json\n * though I notice that some of these are duplicates and/or are missing \";\"\n * eg: \"&amp;\", \"&amp\", \"&AMP;\", and \"&AMP\" all map to \"&\"\n * We no longer need to include numeric entities here, these are now handled\n * by String.fromCodePoint/fromCharCode\n *\n * Anyway the only ones that are really important to allow are the HTML special\n * chars <, >, and &, because these ones can trigger special processing if not\n * replaced by the corresponding entity.\n */\nvar entityToUnicode = {\n    mu: 'μ',\n    amp: '&',\n    lt: '<',\n    gt: '>',\n    nbsp: ' ',\n    times: '×',\n    plusmn: '±',\n    deg: '°'\n};\n\n// NOTE: in general entities can contain uppercase too (so [a-zA-Z]) but all the\n// ones we support use only lowercase. If we ever change that, update the regex.\nvar ENTITY_MATCH = /&(#\\d+|#x[\\da-fA-F]+|[a-z]+);/g;\nfunction convertEntities(_str) {\n    return _str.replace(ENTITY_MATCH, function(fullMatch, innerMatch) {\n        var outChar;\n        if(innerMatch.charAt(0) === '#') {\n            // cannot use String.fromCodePoint in IE\n            outChar = fromCodePoint(\n                innerMatch.charAt(1) === 'x' ?\n                    parseInt(innerMatch.substr(2), 16) :\n                    parseInt(innerMatch.substr(1), 10)\n            );\n        } else outChar = entityToUnicode[innerMatch];\n\n        // as in regular HTML, if we didn't decode the entity just\n        // leave the raw text in place.\n        return outChar || fullMatch;\n    });\n}\nexports.convertEntities = convertEntities;\n\nfunction fromCodePoint(code) {\n    // Don't allow overflow. In Chrome this turns into � but I feel like it's\n    // more useful to just not convert it at all.\n    if(code > 0x10FFFF) return;\n    var stringFromCodePoint = String.fromCodePoint;\n    if(stringFromCodePoint) return stringFromCodePoint(code);\n\n    // IE doesn't have String.fromCodePoint\n    // see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint\n    var stringFromCharCode = String.fromCharCode;\n    if(code <= 0xFFFF) return stringFromCharCode(code);\n    return stringFromCharCode(\n        (code >> 10) + 0xD7C0,\n        (code % 0x400) + 0xDC00\n    );\n}\n\n/*\n * buildSVGText: convert our pseudo-html into SVG tspan elements, and attach these\n * to containerNode\n *\n * @param {svg text element} containerNode: the <text> node to insert this text into\n * @param {string} str: the pseudo-html string to convert to svg\n *\n * @returns {bool}: does the result contain any links? We need to handle the text element\n *   somewhat differently if it does, so just keep track of this when it happens.\n */\nfunction buildSVGText(containerNode, str) {\n    /*\n     * Normalize behavior between IE and others wrt newlines and whitespace:pre\n     * this combination makes IE barf https://github.com/plotly/plotly.js/issues/746\n     * Chrome and FF display \\n, \\r, or \\r\\n as a space in this mode.\n     * I feel like at some point we turned these into <br> but currently we don't so\n     * I'm just going to cement what we do now in Chrome and FF\n     */\n    str = str.replace(NEWLINES, ' ');\n\n    var hasLink = false;\n\n    // as we're building the text, keep track of what elements we're nested inside\n    // nodeStack will be an array of {node, type, style, href, target, popup}\n    // where only type: 'a' gets the last 3 and node is only added when it's created\n    var nodeStack = [];\n    var currentNode;\n    var currentLine = -1;\n\n    function newLine() {\n        currentLine++;\n\n        var lineNode = document.createElementNS(xmlnsNamespaces.svg, 'tspan');\n        d3.select(lineNode).attr({\n            class: 'line',\n            dy: (currentLine * LINE_SPACING) + 'em'\n        });\n        containerNode.appendChild(lineNode);\n\n        currentNode = lineNode;\n\n        var oldNodeStack = nodeStack;\n        nodeStack = [{node: lineNode}];\n\n        if(oldNodeStack.length > 1) {\n            for(var i = 1; i < oldNodeStack.length; i++) {\n                enterNode(oldNodeStack[i]);\n            }\n        }\n    }\n\n    function enterNode(nodeSpec) {\n        var type = nodeSpec.type;\n        var nodeAttrs = {};\n        var nodeType;\n\n        if(type === 'a') {\n            nodeType = 'a';\n            var target = nodeSpec.target;\n            var href = nodeSpec.href;\n            var popup = nodeSpec.popup;\n            if(href) {\n                nodeAttrs = {\n                    'xlink:xlink:show': (target === '_blank' || target.charAt(0) !== '_') ? 'new' : 'replace',\n                    target: target,\n                    'xlink:xlink:href': href\n                };\n                if(popup) {\n                    // security: href and target are not inserted as code but\n                    // as attributes. popup is, but limited to /[A-Za-z0-9_=,]/\n                    nodeAttrs.onclick = 'window.open(this.href.baseVal,this.target.baseVal,\"' +\n                        popup + '\");return false;';\n                }\n            }\n        } else nodeType = 'tspan';\n\n        if(nodeSpec.style) nodeAttrs.style = nodeSpec.style;\n\n        var newNode = document.createElementNS(xmlnsNamespaces.svg, nodeType);\n\n        if(type === 'sup' || type === 'sub') {\n            addTextNode(currentNode, ZERO_WIDTH_SPACE);\n            currentNode.appendChild(newNode);\n\n            var resetter = document.createElementNS(xmlnsNamespaces.svg, 'tspan');\n            addTextNode(resetter, ZERO_WIDTH_SPACE);\n            d3.select(resetter).attr('dy', RESET_DY[type]);\n            nodeAttrs.dy = SHIFT_DY[type];\n\n            currentNode.appendChild(newNode);\n            currentNode.appendChild(resetter);\n        } else {\n            currentNode.appendChild(newNode);\n        }\n\n        d3.select(newNode).attr(nodeAttrs);\n\n        currentNode = nodeSpec.node = newNode;\n        nodeStack.push(nodeSpec);\n    }\n\n    function addTextNode(node, text) {\n        node.appendChild(document.createTextNode(text));\n    }\n\n    function exitNode(type) {\n        // A bare closing tag can't close the root node. If we encounter this it\n        // means there's an extra closing tag that can just be ignored:\n        if(nodeStack.length === 1) {\n            Lib.log('Ignoring unexpected end tag </' + type + '>.', str);\n            return;\n        }\n\n        var innerNode = nodeStack.pop();\n\n        if(type !== innerNode.type) {\n            Lib.log('Start tag <' + innerNode.type + '> doesnt match end tag <' +\n                type + '>. Pretending it did match.', str);\n        }\n        currentNode = nodeStack[nodeStack.length - 1].node;\n    }\n\n    var hasLines = BR_TAG.test(str);\n\n    if(hasLines) newLine();\n    else {\n        currentNode = containerNode;\n        nodeStack = [{node: containerNode}];\n    }\n\n    var parts = str.split(SPLIT_TAGS);\n    for(var i = 0; i < parts.length; i++) {\n        var parti = parts[i];\n        var match = parti.match(ONE_TAG);\n        var tagType = match && match[2].toLowerCase();\n        var tagStyle = TAG_STYLES[tagType];\n\n        if(tagType === 'br') {\n            newLine();\n        } else if(tagStyle === undefined) {\n            addTextNode(currentNode, convertEntities(parti));\n        } else {\n            // tag - open or close\n            if(match[1]) {\n                exitNode(tagType);\n            } else {\n                var extra = match[4];\n\n                var nodeSpec = {type: tagType};\n\n                // now add style, from both the tag name and any extra css\n                // Most of the svg css that users will care about is just like html,\n                // but font color is different (uses fill). Let our users ignore this.\n                var css = getQuotedMatch(extra, STYLEMATCH);\n                if(css) {\n                    css = css.replace(COLORMATCH, '$1 fill:');\n                    if(tagStyle) css += ';' + tagStyle;\n                } else if(tagStyle) css = tagStyle;\n\n                if(css) nodeSpec.style = css;\n\n                if(tagType === 'a') {\n                    hasLink = true;\n\n                    var href = getQuotedMatch(extra, HREFMATCH);\n\n                    if(href) {\n                        var safeHref = sanitizeHref(href);\n                        if(safeHref) {\n                            nodeSpec.href = safeHref;\n                            nodeSpec.target = getQuotedMatch(extra, TARGETMATCH) || '_blank';\n                            nodeSpec.popup = getQuotedMatch(extra, POPUPMATCH);\n                        }\n                    }\n                }\n\n                enterNode(nodeSpec);\n            }\n        }\n    }\n\n    return hasLink;\n}\n\nfunction sanitizeHref(href) {\n    var decodedHref = encodeURI(decodeURI(href));\n    var dummyAnchor1 = document.createElement('a');\n    var dummyAnchor2 = document.createElement('a');\n    dummyAnchor1.href = href;\n    dummyAnchor2.href = decodedHref;\n\n    var p1 = dummyAnchor1.protocol;\n    var p2 = dummyAnchor2.protocol;\n\n    // check safe protocols\n    if(\n        PROTOCOLS.indexOf(p1) !== -1 &&\n        PROTOCOLS.indexOf(p2) !== -1\n    ) {\n        return decodedHref;\n    } else {\n        return '';\n    }\n}\n\n/*\n * sanitizeHTML: port of buildSVGText aimed at providing a clean subset of HTML\n * @param {string} str: the html string to clean\n * @returns {string}: a cleaned and normalized version of the input,\n *     supporting only a small subset of html\n */\nexports.sanitizeHTML = function sanitizeHTML(str) {\n    str = str.replace(NEWLINES, ' ');\n\n    var rootNode = document.createElement('p');\n    var currentNode = rootNode;\n    var nodeStack = [];\n\n    var parts = str.split(SPLIT_TAGS);\n    for(var i = 0; i < parts.length; i++) {\n        var parti = parts[i];\n        var match = parti.match(ONE_TAG);\n        var tagType = match && match[2].toLowerCase();\n\n        if(tagType in TAG_STYLES) {\n            if(match[1]) {\n                if(nodeStack.length) {\n                    currentNode = nodeStack.pop();\n                }\n            } else {\n                var extra = match[4];\n\n                var css = getQuotedMatch(extra, STYLEMATCH);\n                var nodeAttrs = css ? {style: css} : {};\n\n                if(tagType === 'a') {\n                    var href = getQuotedMatch(extra, HREFMATCH);\n\n                    if(href) {\n                        var safeHref = sanitizeHref(href);\n                        if(safeHref) {\n                            nodeAttrs.href = safeHref;\n                            var target = getQuotedMatch(extra, TARGETMATCH);\n                            if(target) {\n                                nodeAttrs.target = target;\n                            }\n                        }\n                    }\n                }\n\n                var newNode = document.createElement(tagType);\n                currentNode.appendChild(newNode);\n                d3.select(newNode).attr(nodeAttrs);\n\n                currentNode = newNode;\n                nodeStack.push(newNode);\n            }\n        } else {\n            currentNode.appendChild(\n                document.createTextNode(convertEntities(parti))\n            );\n        }\n    }\n    var key = 'innerHTML'; // i.e. to avoid pass test-syntax\n    return rootNode[key];\n};\n\nexports.lineCount = function lineCount(s) {\n    return s.selectAll('tspan.line').size() || 1;\n};\n\nexports.positionText = function positionText(s, x, y) {\n    return s.each(function() {\n        var text = d3.select(this);\n\n        function setOrGet(attr, val) {\n            if(val === undefined) {\n                val = text.attr(attr);\n                if(val === null) {\n                    text.attr(attr, 0);\n                    val = 0;\n                }\n            } else text.attr(attr, val);\n            return val;\n        }\n\n        var thisX = setOrGet('x', x);\n        var thisY = setOrGet('y', y);\n\n        if(this.nodeName === 'text') {\n            text.selectAll('tspan.line').attr({x: thisX, y: thisY});\n        }\n    });\n};\n\nfunction alignHTMLWith(_base, container, options) {\n    var alignH = options.horizontalAlign;\n    var alignV = options.verticalAlign || 'top';\n    var bRect = _base.node().getBoundingClientRect();\n    var cRect = container.node().getBoundingClientRect();\n    var thisRect;\n    var getTop;\n    var getLeft;\n\n    if(alignV === 'bottom') {\n        getTop = function() { return bRect.bottom - thisRect.height; };\n    } else if(alignV === 'middle') {\n        getTop = function() { return bRect.top + (bRect.height - thisRect.height) / 2; };\n    } else { // default: top\n        getTop = function() { return bRect.top; };\n    }\n\n    if(alignH === 'right') {\n        getLeft = function() { return bRect.right - thisRect.width; };\n    } else if(alignH === 'center') {\n        getLeft = function() { return bRect.left + (bRect.width - thisRect.width) / 2; };\n    } else { // default: left\n        getLeft = function() { return bRect.left; };\n    }\n\n    return function() {\n        thisRect = this.node().getBoundingClientRect();\n\n        var x0 = getLeft() - cRect.left;\n        var y0 = getTop() - cRect.top;\n        var gd = options.gd || {};\n        if(options.gd) {\n            gd._fullLayout._calcInverseTransform(gd);\n            var transformedCoords = Lib.apply3DTransform(gd._fullLayout._invTransform)(x0, y0);\n            x0 = transformedCoords[0];\n            y0 = transformedCoords[1];\n        }\n\n        this.style({\n            top: y0 + 'px',\n            left: x0 + 'px',\n            'z-index': 1000\n        });\n        return this;\n    };\n}\n\nvar onePx = '1px ';\n\nexports.makeTextShadow = function(color) {\n    var x = onePx;\n    var y = onePx;\n    var b = onePx;\n    return x + y + b + color + ', ' +\n        '-' + x + '-' + y + b + color + ', ' +\n        x + '-' + y + b + color + ', ' +\n        '-' + x + y + b + color;\n};\n\n/*\n * Editable title\n * @param {d3.selection} context: the element being edited. Normally text,\n *   but if it isn't, you should provide the styling options\n * @param {object} options:\n *   @param {div} options.gd: graphDiv\n *   @param {d3.selection} options.delegate: item to bind events to if not this\n *   @param {boolean} options.immediate: start editing now (true) or on click (false, default)\n *   @param {string} options.fill: font color if not as shown\n *   @param {string} options.background: background color if not as shown\n *   @param {string} options.text: initial text, if not as shown\n *   @param {string} options.horizontalAlign: alignment of the edit box wrt. the bound element\n *   @param {string} options.verticalAlign: alignment of the edit box wrt. the bound element\n */\n\nexports.makeEditable = function(context, options) {\n    var gd = options.gd;\n    var _delegate = options.delegate;\n    var dispatch = d3.dispatch('edit', 'input', 'cancel');\n    var handlerElement = _delegate || context;\n\n    context.style({'pointer-events': _delegate ? 'none' : 'all'});\n\n    if(context.size() !== 1) throw new Error('boo');\n\n    function handleClick() {\n        appendEditable();\n        context.style({opacity: 0});\n        // also hide any mathjax svg\n        var svgClass = handlerElement.attr('class');\n        var mathjaxClass;\n        if(svgClass) mathjaxClass = '.' + svgClass.split(' ')[0] + '-math-group';\n        else mathjaxClass = '[class*=-math-group]';\n        if(mathjaxClass) {\n            d3.select(context.node().parentNode).select(mathjaxClass).style({opacity: 0});\n        }\n    }\n\n    function selectElementContents(_el) {\n        var el = _el.node();\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n        el.focus();\n    }\n\n    function appendEditable() {\n        var plotDiv = d3.select(gd);\n        var container = plotDiv.select('.svg-container');\n        var div = container.append('div');\n        var cStyle = context.node().style;\n        var fontSize = parseFloat(cStyle.fontSize || 12);\n\n        var initialText = options.text;\n        if(initialText === undefined) initialText = context.attr('data-unformatted');\n\n        div.classed('plugin-editable editable', true)\n            .style({\n                position: 'absolute',\n                'font-family': cStyle.fontFamily || 'Arial',\n                'font-size': fontSize,\n                color: options.fill || cStyle.fill || 'black',\n                opacity: 1,\n                'background-color': options.background || 'transparent',\n                outline: '#ffffff33 1px solid',\n                margin: [-fontSize / 8 + 1, 0, 0, -1].join('px ') + 'px',\n                padding: '0',\n                'box-sizing': 'border-box'\n            })\n            .attr({contenteditable: true})\n            .text(initialText)\n            .call(alignHTMLWith(context, container, options))\n            .on('blur', function() {\n                gd._editing = false;\n                context.text(this.textContent)\n                    .style({opacity: 1});\n                var svgClass = d3.select(this).attr('class');\n                var mathjaxClass;\n                if(svgClass) mathjaxClass = '.' + svgClass.split(' ')[0] + '-math-group';\n                else mathjaxClass = '[class*=-math-group]';\n                if(mathjaxClass) {\n                    d3.select(context.node().parentNode).select(mathjaxClass).style({opacity: 0});\n                }\n                var text = this.textContent;\n                d3.select(this).transition().duration(0).remove();\n                d3.select(document).on('mouseup', null);\n                dispatch.edit.call(context, text);\n            })\n            .on('focus', function() {\n                var editDiv = this;\n                gd._editing = true;\n                d3.select(document).on('mouseup', function() {\n                    if(d3.event.target === editDiv) return false;\n                    if(document.activeElement === div.node()) div.node().blur();\n                });\n            })\n            .on('keyup', function() {\n                if(d3.event.which === 27) {\n                    gd._editing = false;\n                    context.style({opacity: 1});\n                    d3.select(this)\n                        .style({opacity: 0})\n                        .on('blur', function() { return false; })\n                        .transition().remove();\n                    dispatch.cancel.call(context, this.textContent);\n                } else {\n                    dispatch.input.call(context, this.textContent);\n                    d3.select(this).call(alignHTMLWith(context, container, options));\n                }\n            })\n            .on('keydown', function() {\n                if(d3.event.which === 13) this.blur();\n            })\n            .call(selectElementContents);\n    }\n\n    if(options.immediate) handleClick();\n    else handlerElement.on('click', handleClick);\n\n    return d3.rebind(context, dispatch, 'on');\n};\n"]},"metadata":{},"sourceType":"script"}