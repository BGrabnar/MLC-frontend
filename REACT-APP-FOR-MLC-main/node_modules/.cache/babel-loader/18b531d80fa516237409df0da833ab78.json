{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ajax\\\\Desktop\\\\Praksa\\\\React\\\\REACT-APP-FOR-MLC-main\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport BenchmarkDataFilter from './components/BenchmarkDataFilter';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { lightTheme, darkTheme, toggleTheme } from './components/themes.js';\nimport { Button, CssBaseline, GlobalStyles } from \"@mui/material\";\nimport { Paper } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setTheme = theme => {\n      if (theme === 'light') {\n        this.setState({\n          selectedTheme: { ...lightTheme\n          }\n        });\n      } else {\n        this.setState({\n          selectedTheme: { ...darkTheme\n          }\n        });\n      }\n    };\n\n    this.state = {\n      selectedTheme: darkTheme\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: this.state.selectedTheme,\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          callback: this.setTheme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(BenchmarkDataFilter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Ajax/Desktop/Praksa/React/REACT-APP-FOR-MLC-main/src/App.js"],"names":["React","useState","Header","BenchmarkDataFilter","ThemeProvider","lightTheme","darkTheme","toggleTheme","Button","CssBaseline","GlobalStyles","Paper","App","Component","constructor","props","setTheme","theme","setState","selectedTheme","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,WAAhC,QAAmD,wBAAnD;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,YAA9B,QAAkD,eAAlD;AACA,SAASC,KAAT,QAAsB,mBAAtB;;;AAEA,MAAMC,GAAN,SAAkBZ,KAAK,CAACa,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAClB,UAAMA,KAAN;;AADkB,SAQlBC,QARkB,GAQNC,KAAD,IAAU;AACnB,UAAIA,KAAK,KAAK,OAAd,EACA;AACE,aAAKC,QAAL,CAAc;AAACC,UAAAA,aAAa,EAAE,EAAC,GAAGd;AAAJ;AAAhB,SAAd;AACD,OAHD,MAIA;AACE,aAAKa,QAAL,CAAc;AAACC,UAAAA,aAAa,EAAE,EAAC,GAAGb;AAAJ;AAAhB,SAAd;AACD;AACF,KAhBiB;;AAGlB,SAAKc,KAAL,GAAa;AACXD,MAAAA,aAAa,EAAEb;AADJ,KAAb;AAGC;;AAYDe,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,6BACE,QAAC,aAAD;AAAe,QAAA,KAAK,EAAG,KAAKD,KAAL,CAAWD,aAAlC;AAAA,gCAEM,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAI,KAAKH;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAFN,eAGM,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,gBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AA9B+B;;AAiClC,eAAeJ,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport './App.css';\nimport Header from './components/Header';\nimport BenchmarkDataFilter from './components/BenchmarkDataFilter'\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { lightTheme, darkTheme, toggleTheme } from './components/themes.js';\nimport { Button, CssBaseline, GlobalStyles } from \"@mui/material\";\nimport { Paper } from '@material-ui/core';\n\nclass App extends React.Component {\n  constructor(props){\n  super(props);\n  \n  this.state = {\n    selectedTheme: darkTheme,\n    }\n  }\n\n  setTheme = (theme) =>{\n    if (theme === 'light')\n    {\n      this.setState({selectedTheme: {...lightTheme}})\n    }else\n    {\n      this.setState({selectedTheme: {...darkTheme}})\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <ThemeProvider theme={ this.state.selectedTheme }>\n\n              <Header callback = {this.setTheme}/>\n              <BenchmarkDataFilter />    \n\n        </ThemeProvider>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}