{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrej\\\\Documents\\\\React\\\\REACT-APP-FOR-MLC-main\\\\src\\\\components\\\\BenchmarkDataFilter.jsx\";\nimport React from 'react'; // import { Datasets, Methods} from './dataOptions';\n\nimport EvaluationMeasureRange from './EvaluationMeasureRange';\nimport { Autocomplete } from '@mui/material';\nimport { Button, TextField } from '@material-ui/core';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Grid } from '@material-ui/core';\nimport { Methods } from './dataOptions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst http = requre(http);\n\nclass Body extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getDatasets = () => {\n      var list = []; // post request\n      //const url=\"http://semanticannotations.ijs.si:8890/sparql/\";\n\n      var query = `\n\t\tPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n\t\tPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\n\t\tselect ?dataset_label\n\t\twhere {\n\t\t?dataset rdf:type <http://www.ontodm.com/OntoDM-core/OntoDM_000144> .\n\t\t?dataset rdfs:label ?dataset_label .\n\t\tFILTER regex(?dataset_label, \"^[^_]+$\") .\n\t\t}`;\n      const url = \"http://semanticannotations.ijs.si:8890/sparql/Content-Type='application/sparql-results+xml'&query\";\n      var fuseki_req = url + encodeURIComponent(query);\n      http.get(fuseki_req, resp => {\n        let data = ''; // A chunk of data has been received.\n\n        resp.on('data', chunk => {\n          data += chunk;\n        }); // The whole response has been received. Print out the result.\n\n        resp.on('end', () => {\n          var json = JSON.parse(data);\n          console.log(json); // if(json.results && json.results.bindings[0]){\n          //     let element = json.results.bindings[0]\n          //     this.setState({\n          //         title: this.parseEntry(element.dataset_title),\n          //         MLtask: this.parseEntry(element.MLTask_label),\n          //         links: this.parseEntry(element.links),\n          //         tasks: this.parseEntry(element.tasks),\n          //         labels: this.parseEntry(element.labels)\n          //     })\n          // }\n          // else{\n          //     return console.log(\"No results. \")\n          // }\n        });\n      }).on(\"error\", err => {\n        console.log(err);\n      }); // fetch(url, {\n      // \tmethod: 'POST',\n      // \theaders: {\n      // \t\t'Content-Type': 'application/json'\n      // \t},\t\n      // \tbody: {\n      // \t\tquery: encodeURIComponent(query) \n      // \t}\n      // })\n      // .then(data => {\n      // \tconsole.log(\"query\")\n      // \tconsole.log(data) \n      // \treturn data.json()})\n      // .then(data => \n      // \t{\n      // \t\tfor(let i = 0; i < data.results.bindings.length; i++)\n      // \t\t{\n      // \t\t\tlist.push(data.results.bindings[i].dataset_label.value.slice(0, -5));\n      // \t\t}\n      // \t\tlist.sort((a, b) => a.localeCompare(b, undefined, {sensitivity: 'base'}));\n      // \t})\n      // .catch(error => console.log(\"Error\"))\n      // this.setState({\n      // \tdatasetList: list\n      // })\n    };\n\n    this.getAlgorithms = () => {};\n\n    this.parentHandleMeasure = this.parentHandleMeasure.bind(this);\n    this.parentHandleRange = this.parentHandleRange.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.state = {\n      evaluationHTMLElements: [],\n      selectedEvals: [{\n        \"measure\": \"\",\n        \"range\": \"\",\n        \"id\": 0\n      }],\n      addButtonDisabled: true,\n      disabledMeasures: [],\n      datasetList: [],\n      algorithmList: []\n    };\n  }\n\n  componentDidMount() {\n    this.setEvaluationHTMLElements();\n    this.getDatasets();\n    this.getAlgorithms();\n  }\n\n  parentHandleMeasure(val, id) {\n    let newSelectedEvals = [];\n    this.state.selectedEvals.forEach(el => {\n      if (el.id === id) {\n        el.measure = val;\n      }\n\n      newSelectedEvals.push(el);\n    });\n    this.setState({\n      selectedEvals: newSelectedEvals\n    });\n    this.setDisabledMeasures();\n    this.addButtonDisabled();\n  }\n\n  parentHandleRange(val, id) {\n    let newSelectedEvals = [];\n    this.state.selectedEvals.forEach(el => {\n      if (el.id === id) {\n        el.range = val;\n      }\n\n      newSelectedEvals.push(el);\n    });\n    this.setState({\n      selectedEvals: newSelectedEvals\n    });\n    this.setDisabledMeasures();\n    this.addButtonDisabled();\n  }\n\n  setEvaluationHTMLElements() {\n    console.log(\"set HTML\");\n    console.log(this.state.selectedEvals);\n    const evals = [];\n\n    for (let i = 0; i < this.state.selectedEvals.length; i++) {\n      evals.push( /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(EvaluationMeasureRange, {\n            onHandleMeasureChange: this.parentHandleMeasure,\n            id: this.state.selectedEvals[i].id,\n            range: this.state.selectedEvals[i].range,\n            measure: this.state.selectedEvals[i].measure,\n            onHandleRangeChange: this.parentHandleRange,\n            disabledMeasures: this.state.disabledMeasures\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: () => this.handleRemove(this.state.selectedEvals[i].id),\n            disabled: this.state.selectedEvals.length === 1,\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 5\n      }, this));\n    }\n\n    this.setState({\n      evaluationHTMLElements: evals\n    });\n    console.log(evals);\n    this.setDisabledMeasures();\n  }\n\n  setDisabledMeasures() {\n    const newDisabledMeasures = [];\n\n    for (let i = 0; i < this.state.selectedEvals.length; i++) {\n      newDisabledMeasures.push(this.state.selectedEvals[i].measure);\n    }\n\n    this.setState({\n      disabledMeasures: newDisabledMeasures\n    });\n  }\n\n  addButtonDisabled() {\n    const regex = new RegExp(/^(\\d+(\\.\\d)?\\d*(-\\d+(\\.\\d)?\\d*)?|[><]=?\\d+(\\.\\d)?\\d*)$/);\n\n    for (let i = 0; i < this.state.selectedEvals.length; i++) {\n      if (this.state.selectedEvals[i].measure === null || this.state.selectedEvals[i].measure === '' || this.state.selectedEvals.length > 10 || this.state.selectedEvals[i].range === '' || !regex.test(this.state.selectedEvals[i].range)) {\n        this.setState({\n          addButtonDisabled: true\n        });\n      } else {\n        this.setState({\n          addButtonDisabled: false\n        });\n      }\n    }\n  }\n\n  handleAdd() {\n    let newSelectedEvals = this.state.selectedEvals;\n    newSelectedEvals.push({\n      \"measure\": \"\",\n      \"range\": \"\",\n      \"id\": this.state.selectedEvals[this.state.selectedEvals.length - 1].id + 1\n    });\n    this.setState({\n      selectedEvals: newSelectedEvals,\n      addButtonDisabled: true\n    }, () => {\n      console.log(\"handle add\");\n      console.log(this.state.selectedEvals);\n      this.setEvaluationHTMLElements();\n      this.addButtonDisabled();\n      this.setDisabledMeasures();\n    });\n  }\n\n  handleRemove(x) {\n    console.log(\"handle remove \" + x);\n    let newSelectedEvals = [];\n\n    for (let i = 0; i < this.state.selectedEvals.length; i++) {\n      if (this.state.selectedEvals[i].id !== x) newSelectedEvals.push(this.state.selectedEvals[i]);\n    }\n\n    this.setState({\n      selectedEvals: newSelectedEvals\n    }, () => {\n      console.log(\"handle remove\");\n      console.log(this.state.selectedEvals);\n      this.setEvaluationHTMLElements();\n      this.addButtonDisabled();\n      this.setDisabledMeasures();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n        multiple: true,\n        limitTags: 50,\n        options: this.state.datasetList,\n        sx: {\n          width: 300\n        },\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n          variant: \"outlined\",\n          label: \"Datasets\",\n          color: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        multiple: true,\n        limitTags: 3,\n        options: this.state.algorithmList,\n        sx: {\n          width: 300\n        },\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n          variant: \"outlined\",\n          label: \"Methods\",\n          color: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        multiple: true,\n        limitTags: 50,\n        options: [\"1\", \"2\", \"3\"],\n        sx: {\n          width: 300\n        },\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n          variant: \"outlined\",\n          label: \"Fold\",\n          color: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 5\n      }, this), this.state.evaluationHTMLElements, /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: this.handleAdd,\n        disabled: this.state.addButtonDisabled,\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        variant: \"contained\",\n        size: \"large\",\n        onClick: this.handleSubmit,\n        disabled: this.state.addButtonDisabled,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Body;","map":{"version":3,"sources":["C:/Users/Andrej/Documents/React/REACT-APP-FOR-MLC-main/src/components/BenchmarkDataFilter.jsx"],"names":["React","EvaluationMeasureRange","Autocomplete","Button","TextField","AddIcon","DeleteIcon","Grid","Methods","http","requre","Body","Component","constructor","props","getDatasets","list","query","url","fuseki_req","encodeURIComponent","get","resp","data","on","chunk","json","JSON","parse","console","log","err","getAlgorithms","parentHandleMeasure","bind","parentHandleRange","handleAdd","handleRemove","state","evaluationHTMLElements","selectedEvals","addButtonDisabled","disabledMeasures","datasetList","algorithmList","componentDidMount","setEvaluationHTMLElements","val","id","newSelectedEvals","forEach","el","measure","push","setState","setDisabledMeasures","range","evals","i","length","newDisabledMeasures","regex","RegExp","test","x","render","width","params","handleSubmit"],"mappings":"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","sourcesContent":["import React from 'react';\r\n// import { Datasets, Methods} from './dataOptions';\r\nimport EvaluationMeasureRange from './EvaluationMeasureRange';\r\nimport { Autocomplete } from '@mui/material';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Methods } from './dataOptions';\r\n\r\nconst http = requre(http)\r\n\r\nclass Body extends React.Component {\r\n\r\n\tconstructor(props) {\r\n    \tsuper(props);\r\n\t\tthis.parentHandleMeasure = this.parentHandleMeasure.bind(this);\r\n\t\tthis.parentHandleRange = this.parentHandleRange.bind(this);\r\n\t\tthis.handleAdd = this.handleAdd.bind(this)\r\n\t\tthis.handleRemove = this.handleRemove.bind(this)\r\n\r\n\t\tthis.state = {\r\n\t\t\tevaluationHTMLElements: [],\r\n      \t\tselectedEvals: [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"measure\": \"\",\r\n\t\t\t\t\t\"range\": \"\",\r\n\t\t\t\t\t\"id\": 0\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\taddButtonDisabled: true,\r\n\t\t\tdisabledMeasures: [],\r\n\t\t\tdatasetList: [], \r\n\t\t\talgorithmList: []\r\n    \t}\r\n  \t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tthis.setEvaluationHTMLElements()\r\n\t\tthis.getDatasets()\r\n\t\tthis.getAlgorithms()\r\n\t}\r\n\r\n\tgetDatasets=()=>{\r\n\t\tvar list = []\r\n\r\n\t\t// post request\r\n\t\t//const url=\"http://semanticannotations.ijs.si:8890/sparql/\";\r\n\t\tvar query = `\r\n\t\tPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\n\t\tPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\n\r\n\t\tselect ?dataset_label\r\n\t\twhere {\r\n\t\t?dataset rdf:type <http://www.ontodm.com/OntoDM-core/OntoDM_000144> .\r\n\t\t?dataset rdfs:label ?dataset_label .\r\n\t\tFILTER regex(?dataset_label, \"^[^_]+$\") .\r\n\t\t}`\r\n\t\tconst url = \"http://semanticannotations.ijs.si:8890/sparql/Content-Type='application/sparql-results+xml'&query\"\r\n\r\n\t\tvar fuseki_req = url+encodeURIComponent(query)\r\n            http.get(fuseki_req, (resp) => {\r\n                let data = '';\r\n            \r\n                // A chunk of data has been received.\r\n                resp.on('data', (chunk) => {\r\n                    data += chunk;\r\n                });\r\n            \r\n                // The whole response has been received. Print out the result.\r\n                resp.on('end', () => {\r\n                    var json = JSON.parse(data)\r\n\t\t\t\t\tconsole.log(json)\r\n                    // if(json.results && json.results.bindings[0]){\r\n                    //     let element = json.results.bindings[0]\r\n    \r\n                    //     this.setState({\r\n                    //         title: this.parseEntry(element.dataset_title),\r\n                    //         MLtask: this.parseEntry(element.MLTask_label),\r\n                    //         links: this.parseEntry(element.links),\r\n                    //         tasks: this.parseEntry(element.tasks),\r\n                    //         labels: this.parseEntry(element.labels)\r\n                    //     })\r\n                    // }\r\n                    // else{\r\n                    //     return console.log(\"No results. \")\r\n                    // }\r\n                });\r\n            })\r\n            .on(\"error\", (err) => {\r\n                console.log(err)\r\n            });\r\n\r\n\r\n\t\t// fetch(url, {\r\n\t\t// \tmethod: 'POST',\r\n\t\t// \theaders: {\r\n\t\t// \t\t'Content-Type': 'application/json'\r\n\t\t// \t},\t\r\n\t\t// \tbody: {\r\n\t\t// \t\tquery: encodeURIComponent(query) \r\n\t\t// \t}\r\n\t\t// })\r\n\t\t// .then(data => {\r\n\t\t// \tconsole.log(\"query\")\r\n\t\t// \tconsole.log(data) \r\n\t\t// \treturn data.json()})\r\n\t\t// .then(data => \r\n\t\t// \t{\r\n\t\t// \t\tfor(let i = 0; i < data.results.bindings.length; i++)\r\n\t\t// \t\t{\r\n    \t// \t\t\tlist.push(data.results.bindings[i].dataset_label.value.slice(0, -5));\r\n\t\t// \t\t}\r\n\t\t// \t\tlist.sort((a, b) => a.localeCompare(b, undefined, {sensitivity: 'base'}));\r\n\t\t// \t})\r\n\t\t// .catch(error => console.log(\"Error\"))\r\n\r\n\t\t// this.setState({\r\n\t\t// \tdatasetList: list\r\n\t\t// })\r\n\t}\r\n\r\n\tgetAlgorithms=()=>{\r\n\r\n\t}\r\n\r\n\tparentHandleMeasure(val, id) {\r\n\t\tlet newSelectedEvals = []\r\n\t\tthis.state.selectedEvals.forEach(el => {\r\n\t\t\tif(el.id === id){\r\n\t\t\t\tel.measure = val\r\n\t\t\t}\r\n\t\t\tnewSelectedEvals.push(el)\r\n\t\t})\r\n\t\tthis.setState({\r\n\t\t\tselectedEvals: newSelectedEvals \r\n\t\t})\r\n\t\tthis.setDisabledMeasures()\r\n\t\tthis.addButtonDisabled()\t\r\n\t}\r\n\r\n\tparentHandleRange(val, id) {\r\n\t\tlet newSelectedEvals = []\r\n\t\tthis.state.selectedEvals.forEach(el => {\r\n\t\t\tif(el.id === id){\r\n\t\t\t\tel.range = val\r\n\t\t\t}\r\n\t\t\tnewSelectedEvals.push(el)\r\n\t\t})\r\n\t\tthis.setState({\r\n\t\t\tselectedEvals: newSelectedEvals \r\n\t\t})\r\n\t\tthis.setDisabledMeasures()\r\n\t\tthis.addButtonDisabled()\r\n\t}\r\n\t\r\n\r\n\tsetEvaluationHTMLElements(){\r\n\t\tconsole.log(\"set HTML\")\r\n\t\tconsole.log(this.state.selectedEvals)\r\n\t\tconst evals=[]\r\n\t\tfor(let i = 0; i<this.state.selectedEvals.length; i++){\r\n\t\t\tevals.push(\r\n\t\t\t\t<Grid container spacing = {2}>\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t<EvaluationMeasureRange\r\n\t\t\t\t\t\t\tonHandleMeasureChange={this.parentHandleMeasure}\r\n\t\t\t\t\t\t\tid = {this.state.selectedEvals[i].id}\r\n\t\t\t\t\t\t\trange = {this.state.selectedEvals[i].range}\r\n\t\t\t\t\t\t\tmeasure = {this.state.selectedEvals[i].measure}\r\n\t\t\t\t\t\t\tonHandleRangeChange={this.parentHandleRange}\r\n\t\t\t\t\t\t\tdisabledMeasures={this.state.disabledMeasures}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\tcolor='secondary'\r\n\t\t\t\t\t\t\tonClick={() => this.handleRemove(this.state.selectedEvals[i].id)}\r\n\t\t\t\t\t\t\tdisabled={this.state.selectedEvals.length === 1}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<DeleteIcon/>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t)\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tevaluationHTMLElements: evals\r\n\t\t})\r\n\t\tconsole.log(evals)\r\n\t\tthis.setDisabledMeasures()\r\n\t}\r\n\r\n\tsetDisabledMeasures(){\r\n\t\tconst newDisabledMeasures = []\r\n\t\tfor(let i = 0; i<this.state.selectedEvals.length; i++){\r\n\t\t\tnewDisabledMeasures.push(this.state.selectedEvals[i].measure)\r\n\t\t}\r\n\t\tthis.setState({disabledMeasures: newDisabledMeasures})\r\n\t}\r\n\r\n\taddButtonDisabled(){\r\n\t\tconst regex = new RegExp(/^(\\d+(\\.\\d)?\\d*(-\\d+(\\.\\d)?\\d*)?|[><]=?\\d+(\\.\\d)?\\d*)$/)\r\n\t\tfor(let i = 0; i<this.state.selectedEvals.length; i++){\r\n\t\t\tif(this.state.selectedEvals[i].measure===null ||\r\n\t\t\t\tthis.state.selectedEvals[i].measure==='' ||\r\n\t\t\t\tthis.state.selectedEvals.length>10 ||\r\n\t\t\t\tthis.state.selectedEvals[i].range==='' ||\r\n\t\t\t\t!regex.test(this.state.selectedEvals[i].range)){\r\n\t\t\t\tthis.setState({addButtonDisabled: true})\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tthis.setState({addButtonDisabled: false})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\thandleAdd() {\r\n\t\tlet newSelectedEvals = this.state.selectedEvals\r\n\t\t\tnewSelectedEvals.push({\r\n\t\t\t\t\"measure\": \"\",\r\n\t\t\t\t\"range\": \"\",\r\n\t\t\t\t\"id\": this.state.selectedEvals[this.state.selectedEvals.length-1].id+1\r\n\t\t\t})\r\n\r\n\t\tthis.setState({\r\n\t\t\tselectedEvals: newSelectedEvals,\r\n\t\t\taddButtonDisabled: true\r\n\t\t}, \r\n\t\t()=>{\r\n\t\t\tconsole.log(\"handle add\")\r\n\t\t\tconsole.log(this.state.selectedEvals)\r\n\t\t\tthis.setEvaluationHTMLElements()\r\n\t\t\tthis.addButtonDisabled()\r\n\t\t\tthis.setDisabledMeasures()\r\n\t\t})\r\n\t\t\r\n\t}\r\n\r\n\thandleRemove(x) {\r\n\t\tconsole.log(\"handle remove \"+x)\r\n\t\tlet newSelectedEvals = []\r\n\t\tfor(let i = 0; i<this.state.selectedEvals.length; i++){\r\n\t\t\tif(this.state.selectedEvals[i].id!==x)\r\n\t\t\t\tnewSelectedEvals.push(this.state.selectedEvals[i])\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tselectedEvals: newSelectedEvals\r\n\t\t}, \r\n\t\t()=>{\r\n\t\t\tconsole.log(\"handle remove\")\r\n\t\t\tconsole.log(this.state.selectedEvals)\r\n\t\t\tthis.setEvaluationHTMLElements()\r\n\t\t\tthis.addButtonDisabled()\r\n\t\t\tthis.setDisabledMeasures()\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n    \treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Autocomplete\r\n\t\t\t\t\tmultiple = {true}\r\n\t\t\t\t\tlimitTags={50}\r\n\t\t\t\t\toptions={this.state.datasetList}\r\n\t\t\t\t\tsx={{width: 300}}\r\n\t\t\t\t\trenderInput={(params) => \r\n\t\t\t\t\t\t<TextField {...params} variant='outlined' label = {\"Datasets\"} color='secondary' />\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<Autocomplete\r\n\t\t\t\t\tmultiple = {true}\r\n\t\t\t\t\tlimitTags={3}\r\n\t\t\t\t\toptions={this.state.algorithmList}\r\n\t\t\t\t\tsx={{width: 300}}\r\n\t\t\t\t\trenderInput={(params) => \r\n\t\t\t\t\t\t<TextField {...params} variant='outlined' label = \"Methods\" color='secondary'/>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<Autocomplete\r\n\t\t\t\t\tmultiple = {true}\r\n\t\t\t\t\tlimitTags={50}\r\n\t\t\t\t\toptions={[\"1\", \"2\", \"3\"]}\r\n\t\t\t\t\tsx={{width: 300}}\r\n\t\t\t\t\trenderInput={(params) => \r\n\t\t\t\t\t\t<TextField {...params} variant='outlined' label = \"Fold\" color='secondary'/>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t{this.state.evaluationHTMLElements}\t\t\t\t\r\n\t\t\t\t<Button variant='contained'\r\n\t\t\t\tcolor='secondary'\r\n\t\t\t\tonClick={this.handleAdd}\r\n\t\t\t\tdisabled={this.state.addButtonDisabled}\r\n\t\t\t\t>\r\n\t\t\t\t\t<AddIcon />\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button\r\n\t\t\t\tcolor='secondary'\r\n\t\t\t\tvariant='contained'\r\n\t\t\t\tsize='large'\r\n\t\t\t\tonClick={this.handleSubmit}\r\n\t\t\t\tdisabled={this.state.addButtonDisabled}\r\n\t\t\t\t>\r\n\t\t\t\t\tSubmit\r\n\t\t\t\t</Button>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n  \t}\r\n}\r\nexport default Body;"]},"metadata":{},"sourceType":"module"}