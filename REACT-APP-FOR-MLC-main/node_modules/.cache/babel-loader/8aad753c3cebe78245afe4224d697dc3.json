{"ast":null,"code":"'use strict';\n\nvar colorAttrs = require('../../components/color/attributes');\n\nvar axesAttrs = require('../cartesian/layout_attributes');\n\nvar domainAttrs = require('../domain').attributes;\n\nvar extendFlat = require('../../lib').extendFlat;\n\nvar overrideAll = require('../../plot_api/edit_types').overrideAll;\n\nvar axisLineGridAttr = overrideAll({\n  color: axesAttrs.color,\n  showline: extendFlat({}, axesAttrs.showline, {\n    dflt: true\n  }),\n  linecolor: axesAttrs.linecolor,\n  linewidth: axesAttrs.linewidth,\n  showgrid: extendFlat({}, axesAttrs.showgrid, {\n    dflt: true\n  }),\n  gridcolor: axesAttrs.gridcolor,\n  gridwidth: axesAttrs.gridwidth\n}, 'plot', 'from-root');\nvar axisTickAttrs = overrideAll({\n  ticklen: axesAttrs.ticklen,\n  tickwidth: extendFlat({}, axesAttrs.tickwidth, {\n    dflt: 2\n  }),\n  tickcolor: axesAttrs.tickcolor,\n  showticklabels: axesAttrs.showticklabels,\n  showtickprefix: axesAttrs.showtickprefix,\n  tickprefix: axesAttrs.tickprefix,\n  showticksuffix: axesAttrs.showticksuffix,\n  ticksuffix: axesAttrs.ticksuffix,\n  tickfont: axesAttrs.tickfont,\n  tickformat: axesAttrs.tickformat,\n  hoverformat: axesAttrs.hoverformat,\n  layer: axesAttrs.layer\n}, 'plot', 'from-root');\nvar realAxisAttrs = extendFlat({\n  visible: extendFlat({}, axesAttrs.visible, {\n    dflt: true\n  }),\n  tickvals: {\n    dflt: [0.2, 0.5, 1, 2, 5],\n    valType: 'data_array',\n    editType: 'plot',\n    description: 'Sets the values at which ticks on this axis appear.'\n  },\n  tickangle: extendFlat({}, axesAttrs.tickangle, {\n    dflt: 90\n  }),\n  ticks: {\n    valType: 'enumerated',\n    values: ['top', 'bottom', ''],\n    editType: 'ticks',\n    description: ['Determines whether ticks are drawn or not.', 'If **, this axis\\' ticks are not drawn.', 'If *top* (*bottom*), this axis\\' are drawn above (below)', 'the axis line.'].join(' ')\n  },\n  side: {\n    valType: 'enumerated',\n    values: ['top', 'bottom'],\n    dflt: 'top',\n    editType: 'plot',\n    description: ['Determines on which side of real axis line', 'the tick and tick labels appear.'].join(' ')\n  },\n  editType: 'calc'\n}, axisLineGridAttr, axisTickAttrs);\nvar imaginaryAxisAttrs = extendFlat({\n  visible: extendFlat({}, axesAttrs.visible, {\n    dflt: true\n  }),\n  tickvals: {\n    valType: 'data_array',\n    editType: 'plot',\n    description: ['Sets the values at which ticks on this axis appear.', 'Defaults to `realaxis.tickvals` plus the same as negatives and zero.'].join(' ')\n  },\n  ticks: axesAttrs.ticks,\n  editType: 'calc'\n}, axisLineGridAttr, axisTickAttrs);\nmodule.exports = {\n  domain: domainAttrs({\n    name: 'smith',\n    editType: 'plot'\n  }),\n  bgcolor: {\n    valType: 'color',\n    editType: 'plot',\n    dflt: colorAttrs.background,\n    description: 'Set the background color of the subplot'\n  },\n  realaxis: realAxisAttrs,\n  imaginaryaxis: imaginaryAxisAttrs,\n  editType: 'calc'\n};","map":{"version":3,"sources":["C:/Users/Ajax/Desktop/Praksa/React/REACT-APP-FOR-MLC-main/node_modules/plotly.js/src/plots/smith/layout_attributes.js"],"names":["colorAttrs","require","axesAttrs","domainAttrs","attributes","extendFlat","overrideAll","axisLineGridAttr","color","showline","dflt","linecolor","linewidth","showgrid","gridcolor","gridwidth","axisTickAttrs","ticklen","tickwidth","tickcolor","showticklabels","showtickprefix","tickprefix","showticksuffix","ticksuffix","tickfont","tickformat","hoverformat","layer","realAxisAttrs","visible","tickvals","valType","editType","description","tickangle","ticks","values","join","side","imaginaryAxisAttrs","module","exports","domain","name","bgcolor","background","realaxis","imaginaryaxis"],"mappings":"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","sourcesContent":["'use strict';\n\nvar colorAttrs = require('../../components/color/attributes');\nvar axesAttrs = require('../cartesian/layout_attributes');\nvar domainAttrs = require('../domain').attributes;\nvar extendFlat = require('../../lib').extendFlat;\nvar overrideAll = require('../../plot_api/edit_types').overrideAll;\n\nvar axisLineGridAttr = overrideAll({\n    color: axesAttrs.color,\n    showline: extendFlat({}, axesAttrs.showline, {dflt: true}),\n    linecolor: axesAttrs.linecolor,\n    linewidth: axesAttrs.linewidth,\n    showgrid: extendFlat({}, axesAttrs.showgrid, {dflt: true}),\n    gridcolor: axesAttrs.gridcolor,\n    gridwidth: axesAttrs.gridwidth\n}, 'plot', 'from-root');\n\nvar axisTickAttrs = overrideAll({\n    ticklen: axesAttrs.ticklen,\n    tickwidth: extendFlat({}, axesAttrs.tickwidth, {dflt: 2}),\n    tickcolor: axesAttrs.tickcolor,\n    showticklabels: axesAttrs.showticklabels,\n    showtickprefix: axesAttrs.showtickprefix,\n    tickprefix: axesAttrs.tickprefix,\n    showticksuffix: axesAttrs.showticksuffix,\n    ticksuffix: axesAttrs.ticksuffix,\n    tickfont: axesAttrs.tickfont,\n    tickformat: axesAttrs.tickformat,\n    hoverformat: axesAttrs.hoverformat,\n    layer: axesAttrs.layer\n}, 'plot', 'from-root');\n\nvar realAxisAttrs = extendFlat({\n    visible: extendFlat({}, axesAttrs.visible, {dflt: true}),\n\n    tickvals: {\n        dflt: [0.2, 0.5, 1, 2, 5],\n        valType: 'data_array',\n        editType: 'plot',\n        description: 'Sets the values at which ticks on this axis appear.'\n    },\n\n    tickangle: extendFlat({}, axesAttrs.tickangle, {dflt: 90}),\n\n    ticks: {\n        valType: 'enumerated',\n        values: ['top', 'bottom', ''],\n        editType: 'ticks',\n        description: [\n            'Determines whether ticks are drawn or not.',\n            'If **, this axis\\' ticks are not drawn.',\n            'If *top* (*bottom*), this axis\\' are drawn above (below)',\n            'the axis line.'\n        ].join(' ')\n    },\n\n    side: {\n        valType: 'enumerated',\n        values: ['top', 'bottom'],\n        dflt: 'top',\n        editType: 'plot',\n        description: [\n            'Determines on which side of real axis line',\n            'the tick and tick labels appear.'\n        ].join(' ')\n    },\n\n    editType: 'calc',\n}, axisLineGridAttr, axisTickAttrs);\n\nvar imaginaryAxisAttrs = extendFlat({\n    visible: extendFlat({}, axesAttrs.visible, {dflt: true}),\n\n    tickvals: {\n        valType: 'data_array',\n        editType: 'plot',\n        description: [\n            'Sets the values at which ticks on this axis appear.',\n            'Defaults to `realaxis.tickvals` plus the same as negatives and zero.'\n        ].join(' ')\n    },\n\n    ticks: axesAttrs.ticks,\n\n    editType: 'calc'\n}, axisLineGridAttr, axisTickAttrs);\n\nmodule.exports = {\n    domain: domainAttrs({name: 'smith', editType: 'plot'}),\n\n    bgcolor: {\n        valType: 'color',\n        editType: 'plot',\n        dflt: colorAttrs.background,\n        description: 'Set the background color of the subplot'\n    },\n\n    realaxis: realAxisAttrs,\n    imaginaryaxis: imaginaryAxisAttrs,\n\n    editType: 'calc'\n};\n"]},"metadata":{},"sourceType":"script"}