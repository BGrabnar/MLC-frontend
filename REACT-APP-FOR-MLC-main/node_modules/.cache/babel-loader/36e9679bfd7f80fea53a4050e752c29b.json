{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ajax\\\\Desktop\\\\Praksa\\\\React\\\\REACT-APP-FOR-MLC-main\\\\src\\\\components\\\\themes.js\";\nimport { createTheme, styled } from \"@mui/material/styles\";\nimport AddIcon from '@mui/icons-material/Add';\nimport { Switch, Card, Autocomplete, Paper, Button, CircularProgress } from \"@mui/material\";\nimport { TextField } from '@material-ui/core';\nimport { DataGrid } from '@material-ui/data-grid'; // 0: header   1: body  2: pannels  3: highlight  4: text    5: error\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst darkThemeColors = ['#082032', '#2C394B', '#7c848f', '#FB9300', '#fff', '#ff6666'];\nconst lightThemeColors = ['#343F56', '#F5E6CA', '#f9f0df', '#FB9300', '#000', '#ff0000'];\nexport const darkTheme = createTheme({\n  palette: {\n    //mode: 'dark',\n    primary: {\n      main: darkThemeColors[0]\n    },\n    secondary: {\n      main: darkThemeColors[3]\n    },\n    text: {\n      primary: darkThemeColors[4]\n    },\n    error: {\n      main: darkThemeColors[5]\n    }\n  },\n  typography: {\n    body1: {\n      color: darkThemeColors[4]\n    },\n    button: {\n      color: darkThemeColors[4]\n    }\n  }\n});\nexport const lightTheme = createTheme({\n  palette: {\n    //mode: 'light',\n    primary: {\n      main: lightThemeColors[0]\n    },\n    secondary: {\n      main: lightThemeColors[3]\n    },\n    text: {\n      primary: lightThemeColors[4]\n    },\n    error: {\n      main: lightThemeColors[5]\n    }\n  },\n  typography: {\n    body1: {\n      color: lightThemeColors[4]\n    },\n    button: {\n      color: lightThemeColors[4]\n    }\n  }\n});\nvar currentTheme;\nexport function toggleTheme(theme) {\n  currentTheme = theme;\n\n  if (theme === 'dark') {\n    document.body.style.backgroundColor = darkThemeColors[1];\n    return { ...darkTheme\n    };\n  } else {\n    document.body.style.backgroundColor = lightThemeColors[1];\n    return { ...lightTheme\n    };\n  }\n} // card\n\nexport const CustomCard = styled(Card)(({}) => ({\n  backgroundColor: currentTheme === 'dark' ? darkThemeColors[2] : lightThemeColors[2]\n})); // add icon\n\nexport const CustomAddIcon = styled(AddIcon)(({}) => ({\n  color: currentTheme === 'dark' ? darkThemeColors[4] : lightThemeColors[4]\n})); // autocomplete \n\nexport const CustomAutocomplete = styled(Autocomplete)(({}) => ({\n  '.MuiInputBase-input': {\n    color: currentTheme === 'dark' ? darkThemeColors[4] : lightThemeColors[4]\n  },\n  '.MuiAutocomplete-tag': {\n    color: currentTheme === 'dark' ? darkThemeColors[4] : lightThemeColors[4],\n    backgroundColor: currentTheme === 'dark' ? darkThemeColors[2] : lightThemeColors[2],\n    '.MuiChip-deleteIcon': {\n      color: currentTheme === 'dark' ? darkThemeColors[1] : lightThemeColors[1],\n      '&:hover': {\n        color: currentTheme === 'dark' ? darkThemeColors[3] : lightThemeColors[3]\n      }\n    }\n  },\n  '.MuiAutocomplete-inputRoot': {\n    color: currentTheme === 'dark' ? darkThemeColors[1] : lightThemeColors[1],\n    backgroundColor: currentTheme === 'dark' ? darkThemeColors[1] : lightThemeColors[1]\n  },\n  '.Mui-focused': {\n    backgroundColor: currentTheme === 'dark' ? darkThemeColors[1] : lightThemeColors[1],\n    borderRadius: 5\n  },\n\n  /*   '.MuiAutocomplete-hasClearIcon': {\r\n      color: 'blue',\r\n      backgroundColor: 'blue',\r\n    }, */\n  '.MuiAutocomplete-clearIndicator': {\n    color: currentTheme === 'dark' ? darkThemeColors[1] : lightThemeColors[1],\n    backgroundColor: currentTheme === 'dark' ? darkThemeColors[2] : lightThemeColors[2],\n    '&:hover': {\n      background: currentTheme === 'dark' ? darkThemeColors[3] : lightThemeColors[3]\n    }\n  },\n  '.MuiAutocomplete-popupIndicatorOpen': {\n    color: currentTheme === 'dark' ? darkThemeColors[1] : lightThemeColors[1],\n    backgroundColor: currentTheme === 'dark' ? darkThemeColors[2] : lightThemeColors[2],\n    '&:hover': {\n      background: currentTheme === 'dark' ? darkThemeColors[3] : lightThemeColors[3]\n    }\n  },\n  '.MuiAutocomplete-popupIndicator': {\n    color: currentTheme === 'dark' ? darkThemeColors[1] : lightThemeColors[1],\n    backgroundColor: currentTheme === 'dark' ? darkThemeColors[2] : lightThemeColors[2],\n    '&:hover': {\n      background: currentTheme === 'dark' ? darkThemeColors[3] : lightThemeColors[3]\n    }\n  }\n})); // for autocomplete dropdown list\n\nexport const CustomPaper = props => {\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    style: {\n      background: currentTheme === 'dark' ? darkThemeColors[1] : lightThemeColors[1],\n      color: currentTheme === 'dark' ? darkThemeColors[4] : lightThemeColors[4]\n    },\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 10\n  }, this);\n}; // delete button\n\n_c = CustomPaper;\nexport const CustomDeleteButton = styled(Button)(({}) => ({\n  backgroundColor: currentTheme === 'dark' ? darkThemeColors[1] : lightThemeColors[1],\n  '&:hover': {\n    background: currentTheme === 'dark' ? darkThemeColors[3] : lightThemeColors[3]\n  }\n})); // circular progress / loading icon\n\nexport const CustomCircularProgress = styled(CircularProgress)(({}) => ({\n  color: currentTheme === 'dark' ? darkThemeColors[3] : lightThemeColors[3]\n})); // text field\n\nexport const CustomTextField = styled(TextField)(({}) => ({\n  backgroundColor: currentTheme === 'dark' ? darkThemeColors[1] : lightThemeColors[1],\n  borderRadius: 5,\n  '.Mui-focused': {\n    backgroundColor: currentTheme === 'dark' ? darkThemeColors[1] : lightThemeColors[1],\n    borderRadius: 5\n  }\n})); // data grid\n\nexport const CustomDataGrid = styled(DataGrid)(({}) => ({\n  backgroundColor: currentTheme === 'dark' ? darkThemeColors[1] : lightThemeColors[1],\n  '.MuiDataGrid-row': {\n    color: currentTheme === 'dark' ? darkThemeColors[4] : lightThemeColors[4],\n    backgroundColor: currentTheme === 'dark' ? darkThemeColors[2] : lightThemeColors[2]\n  },\n  '.MuiDataGrid-columnHeader': {\n    color: currentTheme === 'dark' ? darkThemeColors[4] : lightThemeColors[4],\n    backgroundColor: currentTheme === 'dark' ? darkThemeColors[3] : lightThemeColors[3]\n  }\n})); // light / dark theme switch\n\nexport const MaterialUISwitch = styled(Switch)(({\n  theme\n}) => ({\n  width: 62,\n  height: 34,\n  padding: 7,\n  '& .MuiSwitch-switchBase': {\n    margin: 1,\n    padding: 0,\n    transform: 'translateX(6px)',\n    '&.Mui-checked': {\n      color: darkThemeColors[4],\n      transform: 'translateX(22px)',\n      '& .MuiSwitch-thumb:before': {\n        backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(darkThemeColors[4])}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>')`\n      },\n      '& + .MuiSwitch-track': {\n        opacity: 1,\n        backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be'\n      }\n    }\n  },\n  '& .MuiSwitch-thumb': {\n    backgroundColor: theme.palette.mode === 'dark' ? '#003892' : darkThemeColors[3],\n    width: 32,\n    height: 32,\n    '&:before': {\n      content: \"''\",\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      left: 0,\n      top: 0,\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: 'center',\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(darkThemeColors[4])}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>')`\n    }\n  },\n  '& .MuiSwitch-track': {\n    opacity: 1,\n    backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\n    borderRadius: 20 / 2\n  }\n})); //other switches\n\nexport const AntSwitch = styled(Switch)(({\n  theme\n}) => ({\n  width: 42,\n  height: 26,\n  padding: 0,\n  '& .MuiSwitch-switchBase': {\n    padding: 0,\n    margin: 4,\n    transitionDuration: '300ms',\n    '&.Mui-checked': {\n      transform: 'translateX(16px)',\n      color: darkThemeColors[4],\n      '& + .MuiSwitch-track': {\n        backgroundColor: theme.palette.mode === 'dark' ? darkThemeColors[3] : darkThemeColors[3],\n        opacity: 1,\n        border: 0\n      },\n      '&.Mui-disabled + .MuiSwitch-track': {\n        opacity: 0.5\n      }\n    },\n    '&.Mui-focusVisible .MuiSwitch-thumb': {\n      color: '#8796A5',\n      border: '6px solid #fff'\n    }\n  },\n  '& .MuiSwitch-thumb': {\n    boxSizing: 'border-box',\n    width: 18,\n    height: 18\n  },\n  '& .MuiSwitch-track': {\n    borderRadius: 26 / 2,\n    backgroundColor: theme.palette.mode === 'light' ? '#8796A5' : '#8796A5',\n    opacity: 1,\n    transition: theme.transitions.create(['background-color'], {\n      duration: 500\n    })\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomPaper\");","map":{"version":3,"sources":["C:/Users/Ajax/Desktop/Praksa/React/REACT-APP-FOR-MLC-main/src/components/themes.js"],"names":["createTheme","styled","AddIcon","Switch","Card","Autocomplete","Paper","Button","CircularProgress","TextField","DataGrid","darkThemeColors","lightThemeColors","darkTheme","palette","primary","main","secondary","text","error","typography","body1","color","button","lightTheme","currentTheme","toggleTheme","theme","document","body","style","backgroundColor","CustomCard","CustomAddIcon","CustomAutocomplete","borderRadius","background","CustomPaper","props","CustomDeleteButton","CustomCircularProgress","CustomTextField","CustomDataGrid","MaterialUISwitch","width","height","padding","margin","transform","backgroundImage","encodeURIComponent","opacity","mode","content","position","left","top","backgroundRepeat","backgroundPosition","AntSwitch","transitionDuration","border","boxSizing","transition","transitions","create","duration"],"mappings":"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","sourcesContent":["import { createTheme, styled } from \"@mui/material/styles\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport {Switch, Card, Autocomplete, Paper, Button, CircularProgress } from \"@mui/material\";\r\nimport { TextField } from '@material-ui/core';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\n// 0: header   1: body  2: pannels  3: highlight  4: text    5: error\r\nconst darkThemeColors = ['#082032', '#2C394B', '#7c848f', '#FB9300', '#fff', '#ff6666'];\r\nconst lightThemeColors = ['#343F56', '#F5E6CA', '#f9f0df','#FB9300' , '#000', '#ff0000'];\r\n\r\nexport const darkTheme = createTheme({\r\n    palette: {\r\n        //mode: 'dark',\r\n        primary: {\r\n            main: darkThemeColors[0]\r\n        },\r\n        secondary: {\r\n            main: darkThemeColors[3]\r\n        },\r\n        text: {\r\n            primary: darkThemeColors[4],\r\n        },\r\n        error: {\r\n          main: darkThemeColors[5]\r\n        },\r\n    },\r\n    typography: {\r\n        body1: {\r\n            color: darkThemeColors[4]\r\n        },\r\n        button: {\r\n          color: darkThemeColors[4]\r\n    }\r\n      },\r\n});\r\n\r\nexport const lightTheme = createTheme({\r\n    palette: {\r\n        //mode: 'light',\r\n        primary: {\r\n            main: lightThemeColors[0]\r\n        },\r\n        secondary: {\r\n            main: lightThemeColors[3]\r\n        },\r\n        text: {\r\n            primary: lightThemeColors[4],\r\n        },\r\n        error: {\r\n            main: lightThemeColors[5]\r\n        }\r\n    },\r\n    typography: {\r\n        body1: {\r\n             color: lightThemeColors[4]\r\n        },\r\n        button: {\r\n              color: lightThemeColors[4]\r\n        }\r\n      },\r\n});\r\n\r\nvar currentTheme\r\nexport function toggleTheme(theme){\r\n    currentTheme = theme;\r\n    if (theme === 'dark')\r\n    {\r\n        document.body.style.backgroundColor = darkThemeColors[1];\r\n\r\n        return {...darkTheme}\r\n    }\r\n    else\r\n    {\r\n        document.body.style.backgroundColor = lightThemeColors[1];\r\n\r\n        return {...lightTheme}\r\n    }\r\n}\r\n\r\n// card\r\nexport const CustomCard = styled(Card)(({}) => ({\r\n    backgroundColor: currentTheme === 'dark' ? darkThemeColors[2] : lightThemeColors[2],\r\n}));\r\n\r\n// add icon\r\nexport const CustomAddIcon = styled(AddIcon)(({}) => ({\r\n  color: currentTheme === 'dark' ? darkThemeColors[4] : lightThemeColors[4],\r\n}));\r\n\r\n// autocomplete \r\nexport const CustomAutocomplete = styled(Autocomplete)(({}) => ({\r\n  '.MuiInputBase-input':{\r\n    color: currentTheme === 'dark' ? darkThemeColors[4] : lightThemeColors[4],\r\n  },\r\n  '.MuiAutocomplete-tag': {\r\n    color: currentTheme === 'dark' ? darkThemeColors[4] : lightThemeColors[4],\r\n    backgroundColor: currentTheme === 'dark' ? darkThemeColors[2] : lightThemeColors[2],\r\n    '.MuiChip-deleteIcon': {\r\n      color: currentTheme === 'dark' ? darkThemeColors[1] : lightThemeColors[1],\r\n      '&:hover': {\r\n        color: currentTheme === 'dark' ? darkThemeColors[3] : lightThemeColors[3],\r\n     },\r\n    },\r\n  },\r\n  '.MuiAutocomplete-inputRoot': {\r\n    color: currentTheme === 'dark' ? darkThemeColors[1] : lightThemeColors[1],\r\n    backgroundColor: currentTheme === 'dark' ? darkThemeColors[1] : lightThemeColors[1],\r\n  },\r\n  '.Mui-focused': {\r\n    backgroundColor: currentTheme === 'dark' ? darkThemeColors[1] : lightThemeColors[1],\r\n    borderRadius: 5,\r\n  },\r\n/*   '.MuiAutocomplete-hasClearIcon': {\r\n    color: 'blue',\r\n    backgroundColor: 'blue',\r\n  }, */\r\n  '.MuiAutocomplete-clearIndicator': {\r\n    color: currentTheme === 'dark' ? darkThemeColors[1] : lightThemeColors[1],\r\n    backgroundColor: currentTheme === 'dark' ? darkThemeColors[2] : lightThemeColors[2],\r\n    '&:hover': {\r\n      background: currentTheme === 'dark' ? darkThemeColors[3] : lightThemeColors[3],\r\n   },\r\n  },\r\n  '.MuiAutocomplete-popupIndicatorOpen': {\r\n    color: currentTheme === 'dark' ? darkThemeColors[1] : lightThemeColors[1],\r\n    backgroundColor: currentTheme === 'dark' ? darkThemeColors[2] : lightThemeColors[2],\r\n    '&:hover': {\r\n      background: currentTheme === 'dark' ? darkThemeColors[3] : lightThemeColors[3],\r\n   },\r\n  },\r\n  '.MuiAutocomplete-popupIndicator': {\r\n    color: currentTheme === 'dark' ? darkThemeColors[1] : lightThemeColors[1],\r\n    backgroundColor: currentTheme === 'dark' ? darkThemeColors[2] : lightThemeColors[2],\r\n    '&:hover': {\r\n      background: currentTheme === 'dark' ? darkThemeColors[3] : lightThemeColors[3],\r\n   },\r\n  },\r\n}));\r\n\r\n// for autocomplete dropdown list\r\nexport const CustomPaper = (props) => {\r\n  return <Paper style={{background: currentTheme === 'dark' ? darkThemeColors[1] : lightThemeColors[1], color: currentTheme === 'dark' ? darkThemeColors[4] : lightThemeColors[4],}} {...props} />;\r\n};\r\n\r\n// delete button\r\nexport const CustomDeleteButton = styled(Button)(({}) => ({\r\n  backgroundColor: currentTheme === 'dark' ? darkThemeColors[1] : lightThemeColors[1],\r\n  '&:hover': {\r\n    background: currentTheme === 'dark' ? darkThemeColors[3] : lightThemeColors[3],\r\n },\r\n}));\r\n\r\n// circular progress / loading icon\r\nexport const CustomCircularProgress = styled(CircularProgress)(({}) => ({\r\n  color: currentTheme === 'dark' ? darkThemeColors[3] : lightThemeColors[3],\r\n}));\r\n\r\n// text field\r\nexport const CustomTextField = styled(TextField)(({}) =>({\r\n  backgroundColor: currentTheme === 'dark' ? darkThemeColors[1] : lightThemeColors[1],\r\n  borderRadius: 5,\r\n  '.Mui-focused': {\r\n    backgroundColor: currentTheme === 'dark' ? darkThemeColors[1] : lightThemeColors[1],\r\n    borderRadius: 5,\r\n  },\r\n}));\r\n\r\n// data grid\r\nexport const CustomDataGrid = styled(DataGrid)(({}) => ({\r\n  backgroundColor: currentTheme === 'dark' ? darkThemeColors[1] : lightThemeColors[1],\r\n  '.MuiDataGrid-row':{\r\n    color: currentTheme === 'dark' ? darkThemeColors[4] : lightThemeColors[4],\r\n    backgroundColor: currentTheme === 'dark' ? darkThemeColors[2] : lightThemeColors[2],\r\n  },\r\n  '.MuiDataGrid-columnHeader': {\r\n    color: currentTheme === 'dark' ? darkThemeColors[4] : lightThemeColors[4],\r\n    backgroundColor: currentTheme === 'dark' ? darkThemeColors[3] : lightThemeColors[3],\r\n  }\r\n}))\r\n\r\n// light / dark theme switch\r\nexport const MaterialUISwitch = styled(Switch)(({ theme }) => ({\r\n\twidth: 62,\r\n\theight: 34,\r\n\tpadding: 7,\r\n\t'& .MuiSwitch-switchBase': {\r\n\t  margin: 1,\r\n\t  padding: 0,\r\n\t  transform: 'translateX(6px)',\r\n\t  '&.Mui-checked': {\r\n\t\tcolor: darkThemeColors[4],\r\n\t\ttransform: 'translateX(22px)',\r\n\t\t'& .MuiSwitch-thumb:before': {\r\n\t\t  backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n\t\t\tdarkThemeColors[4],\r\n\t\t  )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>')`,\r\n\t\t},\r\n\t\t'& + .MuiSwitch-track': {\r\n\t\t  opacity: 1,\r\n\t\t  backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\r\n\t\t},\r\n\t  },\r\n\t},\r\n\t'& .MuiSwitch-thumb': {\r\n\t  backgroundColor: theme.palette.mode === 'dark' ? '#003892' : darkThemeColors[3],\r\n\t  width: 32,\r\n\t  height: 32,\r\n\t  '&:before': {\r\n\t\tcontent: \"''\",\r\n\t\tposition: 'absolute',\r\n\t\twidth: '100%',\r\n\t\theight: '100%',\r\n\t\tleft: 0,\r\n\t\ttop: 0,\r\n\t\tbackgroundRepeat: 'no-repeat',\r\n\t\tbackgroundPosition: 'center',\r\n\t\tbackgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n\t\t  darkThemeColors[4],\r\n\t\t)}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>')`,\r\n\t  },\r\n\t},\r\n\t'& .MuiSwitch-track': {\r\n\t  opacity: 1,\r\n\t  backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\r\n\t  borderRadius: 20 / 2,\r\n\t},\r\n  }));\r\n\r\n//other switches\r\nexport const AntSwitch = styled(Switch)(({ theme }) => ({\r\n    width: 42,\r\n    height: 26,\r\n    padding: 0,\r\n    '& .MuiSwitch-switchBase': {\r\n      padding: 0,\r\n      margin: 4,\r\n      transitionDuration: '300ms',\r\n      '&.Mui-checked': {\r\n        transform: 'translateX(16px)',\r\n        color: darkThemeColors[4],\r\n        '& + .MuiSwitch-track': {\r\n          backgroundColor: theme.palette.mode === 'dark' ? darkThemeColors[3] : darkThemeColors[3],\r\n          opacity: 1,\r\n          border: 0,\r\n        },\r\n        '&.Mui-disabled + .MuiSwitch-track': {\r\n          opacity: 0.5,\r\n        },\r\n      },\r\n      '&.Mui-focusVisible .MuiSwitch-thumb': {\r\n        color: '#8796A5',\r\n        border: '6px solid #fff',\r\n      },\r\n    },\r\n    '& .MuiSwitch-thumb': {\r\n      boxSizing: 'border-box',\r\n      width: 18,\r\n      height: 18,\r\n    },\r\n    '& .MuiSwitch-track': {\r\n      borderRadius: 26 / 2,\r\n      backgroundColor: theme.palette.mode === 'light' ? '#8796A5' : '#8796A5',\r\n      opacity: 1,\r\n      transition: theme.transitions.create(['background-color'], {\r\n        duration: 500,\r\n      }),\r\n    },\r\n  }));"]},"metadata":{},"sourceType":"module"}