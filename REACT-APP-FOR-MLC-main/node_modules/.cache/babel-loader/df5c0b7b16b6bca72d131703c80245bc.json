{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar Color = require('../../components/color');\n\nvar Template = require('../../plot_api/plot_template');\n\nvar handleSubplotDefaults = require('../subplot_defaults');\n\nvar getSubplotData = require('../get_data').getSubplotData;\n\nvar handlePrefixSuffixDefaults = require('../cartesian/prefix_suffix_defaults');\n\nvar handleTickLabelDefaults = require('../cartesian/tick_label_defaults');\n\nvar handleLineGridDefaults = require('../cartesian/line_grid_defaults');\n\nvar setConvertCartesian = require('../cartesian/set_convert');\n\nvar layoutAttributes = require('./layout_attributes');\n\nvar constants = require('./constants');\n\nvar axisNames = constants.axisNames;\nvar makeImagDflt = memoize(function (realTickvals) {\n  return realTickvals.slice().reverse().map(function (x) {\n    return -x;\n  }).concat([0]).concat(realTickvals);\n}, String);\n\nfunction handleDefaults(contIn, contOut, coerce, opts) {\n  var bgColor = coerce('bgcolor');\n  opts.bgColor = Color.combine(bgColor, opts.paper_bgcolor);\n  var subplotData = getSubplotData(opts.fullData, constants.name, opts.id);\n  var layoutOut = opts.layoutOut;\n  var axName;\n\n  function coerceAxis(attr, dflt) {\n    return coerce(axName + '.' + attr, dflt);\n  }\n\n  for (var i = 0; i < axisNames.length; i++) {\n    axName = axisNames[i];\n\n    if (!Lib.isPlainObject(contIn[axName])) {\n      contIn[axName] = {};\n    }\n\n    var axIn = contIn[axName];\n    var axOut = Template.newContainer(contOut, axName);\n    axOut._id = axOut._name = axName;\n    axOut._attr = opts.id + '.' + axName;\n    axOut._traceIndices = subplotData.map(function (t) {\n      return t._expandedIndex;\n    });\n    var visible = coerceAxis('visible');\n    axOut.type = 'linear';\n    setConvertCartesian(axOut, layoutOut);\n    handlePrefixSuffixDefaults(axIn, axOut, coerceAxis, axOut.type);\n\n    if (visible) {\n      var isRealAxis = axName === 'realaxis';\n      if (isRealAxis) coerceAxis('side');\n\n      if (isRealAxis) {\n        coerceAxis('tickvals');\n      } else {\n        var imagTickvalsDflt = makeImagDflt(contOut.realaxis.tickvals || layoutAttributes.realaxis.tickvals.dflt);\n        coerceAxis('tickvals', imagTickvalsDflt);\n      }\n\n      var dfltColor;\n      var dfltFontColor;\n      var dfltFontSize;\n      var dfltFontFamily;\n      var font = opts.font || {};\n\n      if (visible) {\n        dfltColor = coerceAxis('color');\n        dfltFontColor = dfltColor === axIn.color ? dfltColor : font.color;\n        dfltFontSize = font.size;\n        dfltFontFamily = font.family;\n      }\n\n      handleTickLabelDefaults(axIn, axOut, coerceAxis, axOut.type, {\n        noAng: !isRealAxis,\n        noExp: true,\n        font: {\n          color: dfltFontColor,\n          size: dfltFontSize,\n          family: dfltFontFamily\n        }\n      });\n      Lib.coerce2(contIn, contOut, layoutAttributes, axName + '.ticklen');\n      Lib.coerce2(contIn, contOut, layoutAttributes, axName + '.tickwidth');\n      Lib.coerce2(contIn, contOut, layoutAttributes, axName + '.tickcolor', contOut.color);\n      var showTicks = coerceAxis('ticks');\n\n      if (!showTicks) {\n        delete contOut[axName].ticklen;\n        delete contOut[axName].tickwidth;\n        delete contOut[axName].tickcolor;\n      }\n\n      handleLineGridDefaults(axIn, axOut, coerceAxis, {\n        dfltColor: dfltColor,\n        bgColor: opts.bgColor,\n        // default grid color is darker here (60%, vs cartesian default ~91%)\n        // because the grid is not square so the eye needs heavier cues to follow\n        blend: 60,\n        showLine: true,\n        showGrid: true,\n        noZeroLine: true,\n        attributes: layoutAttributes[axName]\n      });\n      coerceAxis('layer');\n    }\n\n    coerceAxis('hoverformat');\n    delete axOut.type;\n    axOut._input = axIn;\n  }\n}\n\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut, fullData) {\n  handleSubplotDefaults(layoutIn, layoutOut, fullData, {\n    noUirevision: true,\n    type: constants.name,\n    attributes: layoutAttributes,\n    handleDefaults: handleDefaults,\n    font: layoutOut.font,\n    paper_bgcolor: layoutOut.paper_bgcolor,\n    fullData: fullData,\n    layoutOut: layoutOut\n  });\n};\n\nfunction memoize(fn, keyFn) {\n  var cache = {};\n  return function (val) {\n    var newKey = keyFn ? keyFn(val) : val;\n\n    if (newKey in cache) {\n      return cache[newKey];\n    }\n\n    var out = fn(val);\n    cache[newKey] = out;\n    return out;\n  };\n}","map":{"version":3,"sources":["C:/Users/Ajax/Desktop/Praksa/React/REACT-APP-FOR-MLC-main/node_modules/plotly.js/src/plots/smith/layout_defaults.js"],"names":["Lib","require","Color","Template","handleSubplotDefaults","getSubplotData","handlePrefixSuffixDefaults","handleTickLabelDefaults","handleLineGridDefaults","setConvertCartesian","layoutAttributes","constants","axisNames","makeImagDflt","memoize","realTickvals","slice","reverse","map","x","concat","String","handleDefaults","contIn","contOut","coerce","opts","bgColor","combine","paper_bgcolor","subplotData","fullData","name","id","layoutOut","axName","coerceAxis","attr","dflt","i","length","isPlainObject","axIn","axOut","newContainer","_id","_name","_attr","_traceIndices","t","_expandedIndex","visible","type","isRealAxis","imagTickvalsDflt","realaxis","tickvals","dfltColor","dfltFontColor","dfltFontSize","dfltFontFamily","font","color","size","family","noAng","noExp","coerce2","showTicks","ticklen","tickwidth","tickcolor","blend","showLine","showGrid","noZeroLine","attributes","_input","module","exports","supplyLayoutDefaults","layoutIn","noUirevision","fn","keyFn","cache","val","newKey","out"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\nvar Color = require('../../components/color');\nvar Template = require('../../plot_api/plot_template');\n\nvar handleSubplotDefaults = require('../subplot_defaults');\nvar getSubplotData = require('../get_data').getSubplotData;\n\nvar handlePrefixSuffixDefaults = require('../cartesian/prefix_suffix_defaults');\nvar handleTickLabelDefaults = require('../cartesian/tick_label_defaults');\nvar handleLineGridDefaults = require('../cartesian/line_grid_defaults');\nvar setConvertCartesian = require('../cartesian/set_convert');\n\nvar layoutAttributes = require('./layout_attributes');\nvar constants = require('./constants');\nvar axisNames = constants.axisNames;\n\nvar makeImagDflt = memoize(function(realTickvals) {\n    return realTickvals.slice().reverse().map(function(x) { return -x; })\n        .concat([0])\n        .concat(realTickvals);\n}, String);\n\nfunction handleDefaults(contIn, contOut, coerce, opts) {\n    var bgColor = coerce('bgcolor');\n    opts.bgColor = Color.combine(bgColor, opts.paper_bgcolor);\n\n    var subplotData = getSubplotData(opts.fullData, constants.name, opts.id);\n    var layoutOut = opts.layoutOut;\n    var axName;\n\n    function coerceAxis(attr, dflt) {\n        return coerce(axName + '.' + attr, dflt);\n    }\n\n    for(var i = 0; i < axisNames.length; i++) {\n        axName = axisNames[i];\n\n        if(!Lib.isPlainObject(contIn[axName])) {\n            contIn[axName] = {};\n        }\n\n        var axIn = contIn[axName];\n        var axOut = Template.newContainer(contOut, axName);\n        axOut._id = axOut._name = axName;\n        axOut._attr = opts.id + '.' + axName;\n        axOut._traceIndices = subplotData.map(function(t) { return t._expandedIndex; });\n\n        var visible = coerceAxis('visible');\n\n        axOut.type = 'linear';\n        setConvertCartesian(axOut, layoutOut);\n\n        handlePrefixSuffixDefaults(axIn, axOut, coerceAxis, axOut.type);\n\n        if(visible) {\n            var isRealAxis = axName === 'realaxis';\n            if(isRealAxis) coerceAxis('side');\n\n            if(isRealAxis) {\n                coerceAxis('tickvals');\n            } else {\n                var imagTickvalsDflt = makeImagDflt(\n                    contOut.realaxis.tickvals ||\n                    layoutAttributes.realaxis.tickvals.dflt\n                );\n\n                coerceAxis('tickvals', imagTickvalsDflt);\n            }\n\n            var dfltColor;\n            var dfltFontColor;\n            var dfltFontSize;\n            var dfltFontFamily;\n            var font = opts.font || {};\n\n            if(visible) {\n                dfltColor = coerceAxis('color');\n                dfltFontColor = (dfltColor === axIn.color) ? dfltColor : font.color;\n                dfltFontSize = font.size;\n                dfltFontFamily = font.family;\n            }\n\n            handleTickLabelDefaults(axIn, axOut, coerceAxis, axOut.type, {\n                noAng: !isRealAxis,\n                noExp: true,\n                font: {\n                    color: dfltFontColor,\n                    size: dfltFontSize,\n                    family: dfltFontFamily\n                }\n            });\n\n            Lib.coerce2(contIn, contOut, layoutAttributes, axName + '.ticklen');\n            Lib.coerce2(contIn, contOut, layoutAttributes, axName + '.tickwidth');\n            Lib.coerce2(contIn, contOut, layoutAttributes, axName + '.tickcolor', contOut.color);\n            var showTicks = coerceAxis('ticks');\n            if(!showTicks) {\n                delete contOut[axName].ticklen;\n                delete contOut[axName].tickwidth;\n                delete contOut[axName].tickcolor;\n            }\n\n            handleLineGridDefaults(axIn, axOut, coerceAxis, {\n                dfltColor: dfltColor,\n                bgColor: opts.bgColor,\n                // default grid color is darker here (60%, vs cartesian default ~91%)\n                // because the grid is not square so the eye needs heavier cues to follow\n                blend: 60,\n                showLine: true,\n                showGrid: true,\n                noZeroLine: true,\n                attributes: layoutAttributes[axName]\n            });\n\n            coerceAxis('layer');\n        }\n\n        coerceAxis('hoverformat');\n\n        delete axOut.type;\n\n        axOut._input = axIn;\n    }\n}\n\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut, fullData) {\n    handleSubplotDefaults(layoutIn, layoutOut, fullData, {\n        noUirevision: true,\n        type: constants.name,\n        attributes: layoutAttributes,\n        handleDefaults: handleDefaults,\n        font: layoutOut.font,\n        paper_bgcolor: layoutOut.paper_bgcolor,\n        fullData: fullData,\n        layoutOut: layoutOut\n    });\n};\n\nfunction memoize(fn, keyFn) {\n    var cache = {};\n    return function(val) {\n        var newKey = keyFn ? keyFn(val) : val;\n        if(newKey in cache) { return cache[newKey]; }\n\n        var out = fn(val);\n        cache[newKey] = out;\n        return out;\n    };\n}\n"]},"metadata":{},"sourceType":"script"}