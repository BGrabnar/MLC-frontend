{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ajax\\\\Desktop\\\\Praksa\\\\React\\\\REACT-APP-FOR-MLC-main\\\\src\\\\components\\\\PerformanceDataTable.jsx\";\nimport React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst http = require('http');\n\nclass PerformanceDataTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getColumnsAndRows = query => {\n      // columns\n      var columns = [{\n        field: 'id',\n        headerName: '',\n        width: 20\n      }, {\n        field: 'dataset',\n        headerName: 'Dataset',\n        width: 200\n      }, {\n        field: 'algorithm',\n        headerName: 'Method',\n        width: 200\n      }];\n\n      if (this.state.validationFolds) // add extra columns if its folds validation\n        {\n          var subColumn = {\n            field: 'parameters',\n            headerName: 'Tuned Parameters',\n            width: 400\n          };\n          columns.push(subColumn);\n          subColumn = {\n            field: 'fold',\n            headerName: 'Fold',\n            width: 150\n          };\n          columns.push(subColumn);\n        }\n\n      if (this.state.selectedEvaluationMeasures[0]['measure'] === '' || this.state.selectedEvaluationMeasures[0]['measure'] === null) // selected evaluation measure is \"empty\"\n        {\n          for (let i = 0; i < this.state.evaluationMeasureList.length; i++) {\n            subColumn = {\n              field: this.state.evaluationMeasureList[i],\n              width: 250\n            };\n            columns.push(subColumn);\n          }\n        } else {\n        for (let i = 0; i < this.state.selectedEvaluationMeasures.length; i++) // evaluation measure is selected\n        {\n          subColumn = {\n            field: this.state.selectedEvaluationMeasures[i]['measure'],\n            width: 250\n          };\n          columns.push(subColumn);\n        }\n      } // rows\n\n\n      var list = []; // post request\n      //var req = \"http://semanticannotations.ijs.si:8890/sparql?default-graph-uri=http%3A%2F%2Flocalhost%3A8890%2FMLC&&Content-Type='application/json'&query=\"+encodeURIComponent(query) // change back\n\n      var req = \"http://localhost:8890/sparql?default-graph-uri=http%3A%2F%2Flocalhost%3A8890%2FMLC&&Content-Type='application/json'&query=\" + encodeURIComponent(query);\n      http.get(req, resp => {\n        let data = ''; // A chunk of data has been received.\n\n        resp.on('data', chunk => {\n          data += chunk;\n        }); // The whole response has been received. Print out the result.\n\n        resp.on('end', () => {\n          // extract the dataset names from html\n          for (let i = 1; i < data.split('<result>').length; i++) {\n            var result = data.split('<result>')[i].split('<literal>');\n            var subList = {\n              id: i,\n              dataset: result[1].split('</literal>')[0],\n              algorithm: result[2].split('</literal>')[0]\n            };\n\n            for (let j = 0; j < this.state.evaluationMeasureList.length; j++) {\n              // handle range\n              for (let k = 0; k < this.state.selectedEvaluationMeasures.length; k++) {\n                if (this.state.selectedEvaluationMeasures[k]['measure'] === this.state.evaluationMeasureList[j]) {\n                  if (this.state.selectedEvaluationMeasures[k]['range'][0] === '>' && this.state.selectedEvaluationMeasures[k]['range'][1] === '=') {\n                    console.log('>=');\n                    console.log(result[3].split('</literal>')[0].split(\";\")[j].split(\":\")[1]);\n                    console.log(this.state.selectedEvaluationMeasures[k]['range'].substr(2));\n                    console.log(parseInt(result[3].split('</literal>')[0].split(\";\")[j].split(\":\")[1]) >= this.state.selectedEvaluationMeasures[k]['range'].substr(2)); //console.log()\n\n                    if (parseInt(result[3].split('</literal>')[0].split(\";\")[j].split(\":\")[1]) >= this.state.selectedEvaluationMeasures[k]['range'].substr(2)) {\n                      console.log(\"Ne dela?\"); //subList[result[3].split('</literal>')[0].split(\";\")[j].split(\":\")[0]] = result[3].split('</literal>')[0].split(\";\")[j].split(\":\")[1]\n                    }\n                  } else if (this.state.selectedEvaluationMeasures[k]['range'][0] === '<' && this.state.selectedEvaluationMeasures[k]['range'][1] === '=') {\n                    console.log('<=');\n                  } else if (this.state.selectedEvaluationMeasures[k]['range'][0] === '>') {\n                    console.log('>');\n                  } else if (this.state.selectedEvaluationMeasures[k]['range'][0] === '<') {\n                    console.log('<');\n                  } else if (this.state.selectedEvaluationMeasures[k]['range'].match(/^\\d+$/)) {\n                    console.log('=');\n                  } else if (this.state.selectedEvaluationMeasures[k]['range'].match(/^(\\d+-)+\\d+$/)) {\n                    console.log('-');\n                  } else {\n                    console.log('blank');\n                  }\n                }\n              }\n\n              subList[result[3].split('</literal>')[0].split(\";\")[j].split(\":\")[0]] = result[3].split('</literal>')[0].split(\";\")[j].split(\":\")[1];\n            }\n\n            if (this.state.validationFolds) {\n              // tidy the parameter string\n              var evaluationParameters = result[4].split('</literal>')[0];\n              evaluationParameters = evaluationParameters.replace(result[1].split('</literal>')[0], \"\").replace(result[2].split('</literal>')[0], \"\").replace(\"_predictive_model_train_test_evaluation_workflow_execution\", \"\").substr(1);\n              evaluationParameters = evaluationParameters.substr(1, evaluationParameters.length - 3);\n              var wordArray = evaluationParameters.split(\"_\");\n              var str = wordArray[0];\n\n              for (let i = 1; i < wordArray.length; i++) {\n                if (wordArray[i][0] >= '0' && wordArray[i][0] <= '9') {\n                  str += \": \" + wordArray[i];\n                } else {\n                  if (wordArray[i - 1][0] >= '0' && wordArray[i - 1][0] <= '9') {\n                    str += \", \" + wordArray[i];\n                  } else {\n                    str += \" \" + wordArray[i];\n                  }\n                }\n              }\n\n              subList['parameters'] = str; // fold\n\n              var fold = result[5].split('</literal>')[0];\n              subList['fold'] = fold.substr(fold.length - 11, 1);\n            }\n\n            console.log(subList);\n            list.push(subList);\n          }\n\n          this.setState({\n            spreadSheetRows: list,\n            spreadSheetColumns: columns,\n            loadingData: \"none\"\n          });\n        });\n      }).on(\"error\", err => {\n        console.log(err);\n      });\n    };\n\n    this.filterData = this.filterData.bind(this);\n    this.state = {\n      spreadSheetRows: [],\n      spreadSheetColumns: [],\n      selectedDatasets: props.selectedDatasets,\n      selectedAlgorithms: props.selectedAlgorithms,\n      selectedFold: props.selectedFold,\n      selectedEvaluationMeasures: props.selectedEvaluationMeasures,\n      evaluationMeasureList: props.evaluationMeasureList,\n      validationFolds: props.validationFolds,\n      loadingData: \"flex\"\n    };\n  }\n\n  componentDidMount() {\n    this.props.setFilter(this.filterData);\n    this.getDataFromQuery();\n  }\n\n  filterData() {\n    this.setState({\n      selectedDatasets: this.props.selectedDatasets,\n      selectedAlgorithms: this.props.selectedAlgorithms,\n      selectedFold: this.props.selectedFold,\n      validationFolds: this.props.validationFolds,\n      selectedEvaluationMeasures: this.props.selectedEvaluationMeasures,\n      evaluationMeasureList: this.props.evaluationMeasureList,\n      loadingData: \"flex\"\n    }, () => {\n      this.getDataFromQuery();\n    });\n  }\n\n  getDataFromQuery() {\n    var filterString = \"\";\n\n    for (let i = 0; i < this.state.selectedDatasets.length; i++) // for datasets\n    {\n      if (i === 0) filterString += 'Filter (?datasetLabel in (\"';else filterString += '\", \"';\n      filterString += this.state.selectedDatasets[i];\n      if (i === this.state.selectedDatasets.length - 1) filterString += '\")).';\n    }\n\n    for (let i = 0; i < this.state.selectedAlgorithms.length; i++) // for algorithms\n    {\n      if (i === 0) filterString += 'Filter (?Algorithm in (\"';else filterString += '\", \"';\n      filterString += this.state.selectedAlgorithms[i];\n      if (i === this.state.selectedAlgorithms.length - 1) filterString += '\")).';\n    }\n\n    for (let i = 0; i < this.state.selectedFold.length; i++) // for folds\n    {\n      if (i === 0) filterString += 'Filter (regex(?Fold, \"[';\n      filterString += this.state.selectedFold[i];\n      if (i === this.state.selectedFold.length - 1) filterString += ']\")).';\n    }\n\n    if (!this.state.validationFolds) {\n      var query = `\n\t\t\tPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n\t\t\tPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\t\t\t\t\t\n\t\t\tSELECT ?datasetLabel ?Algorithm (group_concat( concat(?evaluationMeasureClassLabel , \":\", ?value) ;separator=\";\") as ?EvaluationMeasures)\n\t\t\tWHERE {\n\t\t\t?trainTestDatasetAssignment <http://purl.obolibrary.org/obo/OBI_0000293> ?dataset.\n\t\t\t?trainTestDatasetAssignment ?precedes ?predictiveModelTrainTestEvaluationWorkflowExecution .\n\t\t\t?predictiveModelTrainTestEvaluationWorkflowExecution <http://purl.obolibrary.org/obo/BFO_0000051> ?predictiveModelTestSetEvaluationCalculation.\n\t\t\t?dataset rdfs:label ?datasetLabelArff .\n\t\t\t?predictiveModelTrainTestEvaluationWorkflowExecution <http://purl.obolibrary.org/obo/BFO_0000051> ?predictiveModelingAlgorithmExecution.\n\t\t\t?predictiveModelingAlgorithmExecution <http://www.ontodm.com/OntoDM-core/ontoexp_0074> ?Algorithm .\n\t\t\t?predictiveModelTestSetEvaluationCalculation rdf:type <http://www.ontodm.com/OntoDM-core/ontoexp_0064>.\n\t\t\t?predictiveModelTestSetEvaluationCalculation <http://purl.obolibrary.org/obo/BFO_0000051> ?evaluationMeasuresCalculation.\n\t\t\t?evaluationMeasuresCalculation ?realizes ?predictiveModelingEvaluationCalculationImplementation.\n\t\t\t?predictiveModelingEvaluationCalculationImplementation ?isConcretizationOf ?evaluationMeasure.\n\t\t\t?evaluationMeasure <http://www.ontodm.com/OntoDT#OntoDT_0000240>  ?value.\n\t\t\t?evaluationMeasure rdfs:label ?evaluationMeasure_label.\n\t\t\t?evaluationMeasure rdf:type ?evaluationMeasureClass .\n\t\t\t?evaluationMeasureClass rdfs:label ?evaluationMeasureClassLabel .\n\t\t\tBIND(REPLACE(?datasetLabelArff , \".arff\", \"\")  AS ?datasetLabel ).\n\t\t\t${filterString}\n\t\t\t}\n\t\t\tGROUP BY ?datasetLabel ?Algorithm \n\t\t\t`;\n    } else {\n      query = `\n\t\t\tPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n\t\t\tPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\t\t\t\t\t\n\t\t\tSELECT ?datasetLabel ?Algorithm (group_concat( concat(?evaluationMeasureClassLabel , \":\", ?value) ;separator=\";\") as ?EvaluationMeasures) ?TunedParameters ?Fold\n\t\t\tWHERE {\n\t\t\t\t?foldTestFoldTrainDatasetAssignment <http://www.obofoundry.org/ro/ro.owl#precedes> ?predictiveModelTrainTestEvaluationWorkflowExecution .\n\t\t\t\t?foldTestFoldTrainDatasetAssignment rdf:type <http://www.ontodm.com/OntoDM-core/ontoexp_0068>.\n\t\t\t\t?foldTestFoldTrainDatasetAssignment ?hasSpecifiedOutput ?foldTest.\n\t\t\t\t?foldTest rdf:type <http://www.ontodm.com/OntoDM-core/OntoDM_000144>.\n\t\t\t\t?foldTest rdfs:label ?Fold.\n\n\n\t\t\t?trainTestDatasetAssignment <http://purl.obolibrary.org/obo/OBI_0000293> ?dataset.\n\t\t\t?trainTestDatasetAssignment ?precedes ?predictiveModelTrainTestEvaluationWorkflowExecution .\n\t\t\t?predictiveModelTrainTestEvaluationWorkflowExecution <http://purl.obolibrary.org/obo/BFO_0000051> ?predictiveModelTestSetEvaluationCalculation.\n\t\t\t?dataset rdfs:label ?datasetLabelArff .\n\t\t\t?predictiveModelTrainTestEvaluationWorkflowExecution <http://purl.obolibrary.org/obo/BFO_0000051> ?predictiveModelingAlgorithmExecution.\n\t\t\t?predictiveModelingAlgorithmExecution <http://www.ontodm.com/OntoDM-core/ontoexp_0074> ?Algorithm .\n\t\t\t?predictiveModelTestSetEvaluationCalculation rdf:type <http://www.ontodm.com/OntoDM-core/ontoexp_0064>.\n\t\t\t?predictiveModelTestSetEvaluationCalculation <http://purl.obolibrary.org/obo/BFO_0000051> ?evaluationMeasuresCalculation.\n\t\t\t?evaluationMeasuresCalculation ?realizes ?predictiveModelingEvaluationCalculationImplementation.\n\t\t\t?predictiveModelingEvaluationCalculationImplementation ?isConcretizationOf ?evaluationMeasure.\n\t\t\t?evaluationMeasure <http://www.ontodm.com/OntoDT#OntoDT_0000240>  ?value.\n\n\t\t\t?evaluationMeasure rdfs:label ?evaluationMeasure_label.\n?evaluationMeasure rdf:type ?evaluationMeasureClass .\n?predictiveModelTrainTestEvaluationWorkflowExecution rdfs:label ?TunedParameters.\n\n\t\t\t?evaluationMeasure rdfs:label ?evaluationMeasure_label.\n\t\t\t?evaluationMeasure rdf:type ?evaluationMeasureClass .\n\t\t\t?evaluationMeasureClass rdfs:label ?evaluationMeasureClassLabel .\n\t\t\tBIND(REPLACE(?datasetLabelArff , \".arff\", \"\")  AS ?datasetLabel ).\n\t\t\tFILTER (regex(?Fold, \"test\")).\n\t\t\t${filterString}\n\t\t\t}\n\t\t\tGROUP BY ?datasetLabel ?Algorithm ?TunedParameters ?Fold\n\t\t\t`;\n    }\n\n    this.getColumnsAndRows(query);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: this.state.loadingData,\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex'\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 650,\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: this.state.spreadSheetRows,\n          columns: this.state.spreadSheetColumns,\n          pageSize: 10,\n          rowsPerPageOptions: [10]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default PerformanceDataTable;","map":{"version":3,"sources":["C:/Users/Ajax/Desktop/Praksa/React/REACT-APP-FOR-MLC-main/src/components/PerformanceDataTable.jsx"],"names":["React","DataGrid","CircularProgress","Box","http","require","PerformanceDataTable","Component","constructor","props","getColumnsAndRows","query","columns","field","headerName","width","state","validationFolds","subColumn","push","selectedEvaluationMeasures","i","evaluationMeasureList","length","list","req","encodeURIComponent","get","resp","data","on","chunk","split","result","subList","id","dataset","algorithm","j","k","console","log","substr","parseInt","match","evaluationParameters","replace","wordArray","str","fold","setState","spreadSheetRows","spreadSheetColumns","loadingData","err","filterData","bind","selectedDatasets","selectedAlgorithms","selectedFold","componentDidMount","setFilter","getDataFromQuery","filterString","render","display","justifyContent","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;;AAEA,MAAMC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAMC,oBAAN,SAAmCN,KAAK,CAACO,SAAzC,CACA;AACIC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAuCnBC,iBAvCmB,GAuCEC,KAAD,IACvB;AACC;AACA,UAAIC,OAAO,GAAG,CACb;AAAEC,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,UAAU,EAAE,EAA3B;AAA+BC,QAAAA,KAAK,EAAE;AAAtC,OADa,EAEb;AAAEF,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,UAAU,EAAE,SAAhC;AAA2CC,QAAAA,KAAK,EAAE;AAAlD,OAFa,EAGb;AAAEF,QAAAA,KAAK,EAAE,WAAT;AAAsBC,QAAAA,UAAU,EAAE,QAAlC;AAA4CC,QAAAA,KAAK,EAAE;AAAnD,OAHa,CAAd;;AAMA,UAAI,KAAKC,KAAL,CAAWC,eAAf,EAAgC;AAChC;AACC,cAAIC,SAAS,GAAG;AAACL,YAAAA,KAAK,EAAE,YAAR;AAAsBC,YAAAA,UAAU,EAAE,kBAAlC;AAAsDC,YAAAA,KAAK,EAAE;AAA7D,WAAhB;AACAH,UAAAA,OAAO,CAACO,IAAR,CAAaD,SAAb;AACAA,UAAAA,SAAS,GAAG;AAACL,YAAAA,KAAK,EAAE,MAAR;AAAgBC,YAAAA,UAAU,EAAE,MAA5B;AAAoCC,YAAAA,KAAK,EAAE;AAA3C,WAAZ;AACAH,UAAAA,OAAO,CAACO,IAAR,CAAaD,SAAb;AACA;;AAED,UAAI,KAAKF,KAAL,CAAWI,0BAAX,CAAsC,CAAtC,EAAyC,SAAzC,MAAwD,EAAxD,IAA8D,KAAKJ,KAAL,CAAWI,0BAAX,CAAsC,CAAtC,EAAyC,SAAzC,MAAwD,IAA1H,EAAgI;AAChI;AACC,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKL,KAAL,CAAWM,qBAAX,CAAiCC,MAArD,EAA6DF,CAAC,EAA9D,EACA;AACCH,YAAAA,SAAS,GAAG;AACXL,cAAAA,KAAK,EAAE,KAAKG,KAAL,CAAWM,qBAAX,CAAiCD,CAAjC,CADI;AACiCN,cAAAA,KAAK,EAAE;AADxC,aAAZ;AAGAH,YAAAA,OAAO,CAACO,IAAR,CAAaD,SAAb;AACA;AACD,SATD,MAWA;AACC,aAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKL,KAAL,CAAWI,0BAAX,CAAsCG,MAA1D,EAAkEF,CAAC,EAAnE,EAAuE;AACvE;AACCH,UAAAA,SAAS,GAAG;AACXL,YAAAA,KAAK,EAAE,KAAKG,KAAL,CAAWI,0BAAX,CAAsCC,CAAtC,EAAyC,SAAzC,CADI;AACiDN,YAAAA,KAAK,EAAE;AADxD,WAAZ;AAGAH,UAAAA,OAAO,CAACO,IAAR,CAAaD,SAAb;AACA;AACD,OAnCF,CAqCC;;;AACA,UAAIM,IAAI,GAAG,EAAX,CAtCD,CAuCC;AACA;;AACA,UAAIC,GAAG,GAAG,+HAA6HC,kBAAkB,CAACf,KAAD,CAAzJ;AACAP,MAAAA,IAAI,CAACuB,GAAL,CAASF,GAAT,EAAeG,IAAD,IAAU;AACvB,YAAIC,IAAI,GAAG,EAAX,CADuB,CAGvB;;AACAD,QAAAA,IAAI,CAACE,EAAL,CAAQ,MAAR,EAAiBC,KAAD,IAAW;AAC1BF,UAAAA,IAAI,IAAIE,KAAR;AACA,SAFD,EAJuB,CAQvB;;AACAH,QAAAA,IAAI,CACHE,EADD,CACI,KADJ,EACW,MAAM;AAChB;AAEC,eAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGQ,IAAI,CAACG,KAAL,CAAW,UAAX,EAAuBT,MAA3C,EAAmDF,CAAC,EAApD,EACA;AACC,gBAAIY,MAAM,GAAGJ,IAAI,CAACG,KAAL,CAAW,UAAX,EAAuBX,CAAvB,EAA0BW,KAA1B,CAAgC,WAAhC,CAAb;AAEA,gBAAIE,OAAO,GAAG;AACbC,cAAAA,EAAE,EAAEd,CADS;AAEbe,cAAAA,OAAO,EAAEH,MAAM,CAAC,CAAD,CAAN,CAAUD,KAAV,CAAgB,YAAhB,EAA8B,CAA9B,CAFI;AAGbK,cAAAA,SAAS,EAAEJ,MAAM,CAAC,CAAD,CAAN,CAAUD,KAAV,CAAgB,YAAhB,EAA8B,CAA9B;AAHE,aAAd;;AAMA,iBAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKtB,KAAL,CAAWM,qBAAX,CAAiCC,MAArD,EAA6De,CAAC,EAA9D,EACA;AACC;AACA,mBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKvB,KAAL,CAAWI,0BAAX,CAAsCG,MAA1D,EAAkEgB,CAAC,EAAnE,EACA;AACC,oBAAI,KAAKvB,KAAL,CAAWI,0BAAX,CAAsCmB,CAAtC,EAAyC,SAAzC,MAAwD,KAAKvB,KAAL,CAAWM,qBAAX,CAAiCgB,CAAjC,CAA5D,EACA;AAGC,sBAAI,KAAKtB,KAAL,CAAWI,0BAAX,CAAsCmB,CAAtC,EAAyC,OAAzC,EAAkD,CAAlD,MAAyD,GAAzD,IAAgE,KAAKvB,KAAL,CAAWI,0BAAX,CAAsCmB,CAAtC,EAAyC,OAAzC,EAAkD,CAAlD,MAAyD,GAA7H,EACA;AACCC,oBAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAD,oBAAAA,OAAO,CAACC,GAAR,CAAYR,MAAM,CAAC,CAAD,CAAN,CAAUD,KAAV,CAAgB,YAAhB,EAA8B,CAA9B,EAAiCA,KAAjC,CAAuC,GAAvC,EAA4CM,CAA5C,EAA+CN,KAA/C,CAAqD,GAArD,EAA0D,CAA1D,CAAZ;AACAQ,oBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKzB,KAAL,CAAWI,0BAAX,CAAsCmB,CAAtC,EAAyC,OAAzC,EAAkDG,MAAlD,CAAyD,CAAzD,CAAZ;AACAF,oBAAAA,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACV,MAAM,CAAC,CAAD,CAAN,CAAUD,KAAV,CAAgB,YAAhB,EAA8B,CAA9B,EAAiCA,KAAjC,CAAuC,GAAvC,EAA4CM,CAA5C,EAA+CN,KAA/C,CAAqD,GAArD,EAA0D,CAA1D,CAAD,CAAR,IAA0E,KAAKhB,KAAL,CAAWI,0BAAX,CAAsCmB,CAAtC,EAAyC,OAAzC,EAAkDG,MAAlD,CAAyD,CAAzD,CAAtF,EAJD,CAKC;;AACA,wBAAIC,QAAQ,CAACV,MAAM,CAAC,CAAD,CAAN,CAAUD,KAAV,CAAgB,YAAhB,EAA8B,CAA9B,EAAiCA,KAAjC,CAAuC,GAAvC,EAA4CM,CAA5C,EAA+CN,KAA/C,CAAqD,GAArD,EAA0D,CAA1D,CAAD,CAAR,IAA0E,KAAKhB,KAAL,CAAWI,0BAAX,CAAsCmB,CAAtC,EAAyC,OAAzC,EAAkDG,MAAlD,CAAyD,CAAzD,CAA9E,EACA;AACCF,sBAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EADD,CAEC;AAEA;AACD,mBAbD,MAcK,IAAI,KAAKzB,KAAL,CAAWI,0BAAX,CAAsCmB,CAAtC,EAAyC,OAAzC,EAAkD,CAAlD,MAAyD,GAAzD,IAAgE,KAAKvB,KAAL,CAAWI,0BAAX,CAAsCmB,CAAtC,EAAyC,OAAzC,EAAkD,CAAlD,MAAyD,GAA7H,EACL;AACCC,oBAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,mBAHI,MAIA,IAAI,KAAKzB,KAAL,CAAWI,0BAAX,CAAsCmB,CAAtC,EAAyC,OAAzC,EAAkD,CAAlD,MAAyD,GAA7D,EACL;AACCC,oBAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,mBAHI,MAIA,IAAG,KAAKzB,KAAL,CAAWI,0BAAX,CAAsCmB,CAAtC,EAAyC,OAAzC,EAAkD,CAAlD,MAAyD,GAA5D,EACL;AACCC,oBAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,mBAHI,MAIA,IAAG,KAAKzB,KAAL,CAAWI,0BAAX,CAAsCmB,CAAtC,EAAyC,OAAzC,EAAkDK,KAAlD,CAAwD,OAAxD,CAAH,EACL;AACCJ,oBAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,mBAHI,MAIA,IAAG,KAAKzB,KAAL,CAAWI,0BAAX,CAAsCmB,CAAtC,EAAyC,OAAzC,EAAkDK,KAAlD,CAAwD,cAAxD,CAAH,EACL;AACCJ,oBAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,mBAHI,MAKL;AACCD,oBAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA;AACD;AACD;;AAEDP,cAAAA,OAAO,CAACD,MAAM,CAAC,CAAD,CAAN,CAAUD,KAAV,CAAgB,YAAhB,EAA8B,CAA9B,EAAiCA,KAAjC,CAAuC,GAAvC,EAA4CM,CAA5C,EAA+CN,KAA/C,CAAqD,GAArD,EAA0D,CAA1D,CAAD,CAAP,GAAwEC,MAAM,CAAC,CAAD,CAAN,CAAUD,KAAV,CAAgB,YAAhB,EAA8B,CAA9B,EAAiCA,KAAjC,CAAuC,GAAvC,EAA4CM,CAA5C,EAA+CN,KAA/C,CAAqD,GAArD,EAA0D,CAA1D,CAAxE;AACA;;AAED,gBAAI,KAAKhB,KAAL,CAAWC,eAAf,EACA;AACC;AACA,kBAAI4B,oBAAoB,GAAGZ,MAAM,CAAC,CAAD,CAAN,CAAUD,KAAV,CAAgB,YAAhB,EAA8B,CAA9B,CAA3B;AACAa,cAAAA,oBAAoB,GAAGA,oBAAoB,CAACC,OAArB,CAA6Bb,MAAM,CAAC,CAAD,CAAN,CAAUD,KAAV,CAAgB,YAAhB,EAA8B,CAA9B,CAA7B,EAA+D,EAA/D,EAAmEc,OAAnE,CAA2Eb,MAAM,CAAC,CAAD,CAAN,CAAUD,KAAV,CAAgB,YAAhB,EAA8B,CAA9B,CAA3E,EAA6G,EAA7G,EAAiHc,OAAjH,CAAyH,4DAAzH,EAAuL,EAAvL,EAA2LJ,MAA3L,CAAkM,CAAlM,CAAvB;AACAG,cAAAA,oBAAoB,GAAGA,oBAAoB,CAACH,MAArB,CAA4B,CAA5B,EAA+BG,oBAAoB,CAACtB,MAArB,GAA8B,CAA7D,CAAvB;AAEA,kBAAIwB,SAAS,GAAGF,oBAAoB,CAACb,KAArB,CAA2B,GAA3B,CAAhB;AACA,kBAAIgB,GAAG,GAAGD,SAAS,CAAC,CAAD,CAAnB;;AACA,mBAAK,IAAI1B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0B,SAAS,CAACxB,MAA9B,EAAsCF,CAAC,EAAvC,EACA;AACC,oBAAI0B,SAAS,CAAC1B,CAAD,CAAT,CAAa,CAAb,KAAmB,GAAnB,IAA0B0B,SAAS,CAAC1B,CAAD,CAAT,CAAa,CAAb,KAAmB,GAAjD,EACA;AACA2B,kBAAAA,GAAG,IAAI,OAAOD,SAAS,CAAC1B,CAAD,CAAvB;AACC,iBAHD,MAKA;AACC,sBAAI0B,SAAS,CAAC1B,CAAC,GAAC,CAAH,CAAT,CAAe,CAAf,KAAqB,GAArB,IAA4B0B,SAAS,CAAC1B,CAAC,GAAC,CAAH,CAAT,CAAe,CAAf,KAAqB,GAArD,EACA;AACC2B,oBAAAA,GAAG,IAAI,OAAOD,SAAS,CAAC1B,CAAD,CAAvB;AACA,mBAHD,MAKA;AACC2B,oBAAAA,GAAG,IAAI,MAAMD,SAAS,CAAC1B,CAAD,CAAtB;AACA;AACD;AACD;;AACDa,cAAAA,OAAO,CAAC,YAAD,CAAP,GAAwBc,GAAxB,CA1BD,CA4BC;;AACA,kBAAIC,IAAI,GAAGhB,MAAM,CAAC,CAAD,CAAN,CAAUD,KAAV,CAAgB,YAAhB,EAA8B,CAA9B,CAAX;AACAE,cAAAA,OAAO,CAAC,MAAD,CAAP,GAAkBe,IAAI,CAACP,MAAL,CAAYO,IAAI,CAAC1B,MAAL,GAAY,EAAxB,EAA4B,CAA5B,CAAlB;AACA;;AACDiB,YAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACAV,YAAAA,IAAI,CAACL,IAAL,CAAUe,OAAV;AACA;;AACD,eAAKgB,QAAL,CAAc;AACbC,YAAAA,eAAe,EAAE3B,IADJ;AAEb4B,YAAAA,kBAAkB,EAAExC,OAFP;AAGbyC,YAAAA,WAAW,EAAE;AAHA,WAAd;AAKA,SA5GF;AA6GC,OAtHF,EAuHEvB,EAvHF,CAuHK,OAvHL,EAuHewB,GAAD,IAAS;AACrBd,QAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;AACA,OAzHF;AA0HA,KA5MqB;;AAEf,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AAEA,SAAKxC,KAAL,GAAa;AACTmC,MAAAA,eAAe,EAAE,EADR;AAETC,MAAAA,kBAAkB,EAAE,EAFX;AAITK,MAAAA,gBAAgB,EAAEhD,KAAK,CAACgD,gBAJf;AAKTC,MAAAA,kBAAkB,EAAEjD,KAAK,CAACiD,kBALjB;AAMlBC,MAAAA,YAAY,EAAElD,KAAK,CAACkD,YANF;AAOTvC,MAAAA,0BAA0B,EAAEX,KAAK,CAACW,0BAPzB;AAQTE,MAAAA,qBAAqB,EAAEb,KAAK,CAACa,qBARpB;AASTL,MAAAA,eAAe,EAAER,KAAK,CAACQ,eATd;AAUlBoC,MAAAA,WAAW,EAAE;AAVK,KAAb;AAYH;;AAEJO,EAAAA,iBAAiB,GACjB;AACC,SAAKnD,KAAL,CAAWoD,SAAX,CAAqB,KAAKN,UAA1B;AACA,SAAKO,gBAAL;AACA;;AAEDP,EAAAA,UAAU,GACV;AACO,SAAKL,QAAL,CAAc;AACVO,MAAAA,gBAAgB,EAAE,KAAKhD,KAAL,CAAWgD,gBADnB;AAEVC,MAAAA,kBAAkB,EAAE,KAAKjD,KAAL,CAAWiD,kBAFrB;AAGnBC,MAAAA,YAAY,EAAE,KAAKlD,KAAL,CAAWkD,YAHN;AAIV1C,MAAAA,eAAe,EAAE,KAAKR,KAAL,CAAWQ,eAJlB;AAKnBG,MAAAA,0BAA0B,EAAE,KAAKX,KAAL,CAAWW,0BALpB;AAMnBE,MAAAA,qBAAqB,EAAE,KAAKb,KAAL,CAAWa,qBANf;AAOnB+B,MAAAA,WAAW,EAAE;AAPM,KAAd,EAQD,MAAM;AACV,WAAKS,gBAAL;AAAwB,KATnB;AAWN;;AAyKDA,EAAAA,gBAAgB,GAAE;AACjB,QAAIC,YAAY,GAAG,EAAnB;;AACA,SAAK,IAAI1C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKL,KAAL,CAAWyC,gBAAX,CAA4BlC,MAAhD,EAAwDF,CAAC,EAAzD,EAA6D;AAC7D;AACC,UAAIA,CAAC,KAAK,CAAV,EACC0C,YAAY,IAAI,6BAAhB,CADD,KAGCA,YAAY,IAAI,MAAhB;AACDA,MAAAA,YAAY,IAAI,KAAK/C,KAAL,CAAWyC,gBAAX,CAA4BpC,CAA5B,CAAhB;AAEA,UAAIA,CAAC,KAAK,KAAKL,KAAL,CAAWyC,gBAAX,CAA4BlC,MAA5B,GAAqC,CAA/C,EACCwC,YAAY,IAAI,MAAhB;AACD;;AAED,SAAK,IAAI1C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKL,KAAL,CAAW0C,kBAAX,CAA8BnC,MAAlD,EAA0DF,CAAC,EAA3D,EAA+D;AAC/D;AACC,UAAIA,CAAC,KAAK,CAAV,EACC0C,YAAY,IAAI,0BAAhB,CADD,KAGCA,YAAY,IAAI,MAAhB;AACDA,MAAAA,YAAY,IAAI,KAAK/C,KAAL,CAAW0C,kBAAX,CAA8BrC,CAA9B,CAAhB;AAEA,UAAIA,CAAC,KAAK,KAAKL,KAAL,CAAW0C,kBAAX,CAA8BnC,MAA9B,GAAuC,CAAjD,EACCwC,YAAY,IAAI,MAAhB;AACD;;AAED,SAAK,IAAI1C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKL,KAAL,CAAW2C,YAAX,CAAwBpC,MAA5C,EAAoDF,CAAC,EAArD,EAAyD;AACzD;AACC,UAAIA,CAAC,KAAK,CAAV,EACC0C,YAAY,IAAI,yBAAhB;AACDA,MAAAA,YAAY,IAAI,KAAK/C,KAAL,CAAW2C,YAAX,CAAwBtC,CAAxB,CAAhB;AAEA,UAAIA,CAAC,KAAK,KAAKL,KAAL,CAAW2C,YAAX,CAAwBpC,MAAxB,GAAiC,CAA3C,EACCwC,YAAY,IAAI,OAAhB;AACD;;AAED,QAAI,CAAC,KAAK/C,KAAL,CAAWC,eAAhB,EACA;AACC,UAAIN,KAAK,GAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAKoD,YAAa;AAClB;AACA;AACA,IAxBG;AAyBA,KA3BD,MA6BA;AACCpD,MAAAA,KAAK,GAAI;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAKoD,YAAa;AAClB;AACA;AACA,IArCG;AAsCA;;AAED,SAAKrD,iBAAL,CAAuBC,KAAvB;AACA;;AAEEqD,EAAAA,MAAM,GACN;AACI,wBACL,QAAC,KAAD,CAAO,QAAP;AAAA,8BACC;AAAK,QAAA,KAAK,EAAE;AACZC,UAAAA,OAAO,EAAE,KAAKjD,KAAL,CAAWqC,WADR;AAEZa,UAAAA,cAAc,EAAE;AAFJ,SAAZ;AAAA,+BAIC,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAED,YAAAA,OAAO,EAAE;AAAX,WAAT;AAAA,iCACC,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAJD;AAAA;AAAA;AAAA;AAAA,cADD,eAUS;AAAK,QAAA,KAAK,EAAE;AAAEE,UAAAA,MAAM,EAAE,GAAV;AAAepD,UAAAA,KAAK,EAAE;AAAtB,SAAZ;AAAA,+BACA,QAAC,QAAD;AACI,UAAA,IAAI,EAAE,KAAKC,KAAL,CAAWmC,eADrB;AAEI,UAAA,OAAO,EAAE,KAAKnC,KAAL,CAAWoC,kBAFxB;AAGI,UAAA,QAAQ,EAAE,EAHd;AAII,UAAA,kBAAkB,EAAE,CAAC,EAAD;AAJxB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAVT;AAAA;AAAA;AAAA;AAAA;AAAA,YADK;AAqBH;;AAnVL;;AAsVA,eAAe9C,oBAAf","sourcesContent":["import React from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst http = require('http')\r\n\r\nclass PerformanceDataTable extends React.Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.filterData = this.filterData.bind(this);\r\n\r\n        this.state = {\r\n            spreadSheetRows: [],\r\n            spreadSheetColumns: [],\r\n\r\n            selectedDatasets: props.selectedDatasets,\r\n            selectedAlgorithms: props.selectedAlgorithms,\r\n\t\t\tselectedFold: props.selectedFold,\r\n            selectedEvaluationMeasures: props.selectedEvaluationMeasures,\r\n            evaluationMeasureList: props.evaluationMeasureList,\r\n            validationFolds: props.validationFolds,\r\n\t\t\tloadingData: \"flex\"\r\n        };\r\n    }\r\n\r\n\tcomponentDidMount()\r\n\t{\r\n\t\tthis.props.setFilter(this.filterData)\r\n\t\tthis.getDataFromQuery()\r\n\t}\r\n\t\r\n\tfilterData()\r\n\t{\r\n        this.setState({\r\n            selectedDatasets: this.props.selectedDatasets,\r\n            selectedAlgorithms: this.props.selectedAlgorithms,\r\n\t\t\tselectedFold: this.props.selectedFold,\r\n            validationFolds: this.props.validationFolds,\r\n\t\t\tselectedEvaluationMeasures: this.props.selectedEvaluationMeasures,\r\n\t\t\tevaluationMeasureList: this.props.evaluationMeasureList,\r\n\t\t\tloadingData: \"flex\"\r\n    \t},() => {\r\n\t\t\tthis.getDataFromQuery()});\r\n        \r\n\t}\r\n\r\n    getColumnsAndRows = (query) =>\r\n\t{\r\n\t\t// columns\r\n\t\tvar columns = [\r\n\t\t\t{ field: 'id', headerName: '', width: 20},\r\n\t\t\t{ field: 'dataset', headerName: 'Dataset', width: 200 },\r\n\t\t\t{ field: 'algorithm', headerName: 'Method', width: 200 }\r\n\t\t];\r\n\r\n\t\tif (this.state.validationFolds) // add extra columns if its folds validation\r\n\t\t{\r\n\t\t\tvar subColumn = {field: 'parameters', headerName: 'Tuned Parameters', width: 400};\r\n\t\t\tcolumns.push(subColumn);\r\n\t\t\tsubColumn = {field: 'fold', headerName: 'Fold', width: 150};\r\n\t\t\tcolumns.push(subColumn);\r\n\t\t}\r\n\r\n\t\tif (this.state.selectedEvaluationMeasures[0]['measure'] === '' || this.state.selectedEvaluationMeasures[0]['measure'] === null) // selected evaluation measure is \"empty\"\r\n\t\t{\r\n\t\t\tfor (let i = 0; i < this.state.evaluationMeasureList.length; i++)\r\n\t\t\t{\r\n\t\t\t\tsubColumn = {\r\n\t\t\t\t\tfield: this.state.evaluationMeasureList[i], width: 250\r\n\t\t\t\t};\r\n\t\t\t\tcolumns.push(subColumn);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tfor (let i = 0; i < this.state.selectedEvaluationMeasures.length; i++) // evaluation measure is selected\r\n\t\t\t{\r\n\t\t\t\tsubColumn = {\r\n\t\t\t\t\tfield: this.state.selectedEvaluationMeasures[i]['measure'], width: 250\r\n\t\t\t\t};\r\n\t\t\t\tcolumns.push(subColumn);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// rows\r\n\t\tvar list = [];\r\n\t\t// post request\r\n\t\t//var req = \"http://semanticannotations.ijs.si:8890/sparql?default-graph-uri=http%3A%2F%2Flocalhost%3A8890%2FMLC&&Content-Type='application/json'&query=\"+encodeURIComponent(query) // change back\r\n\t\tvar req = \"http://localhost:8890/sparql?default-graph-uri=http%3A%2F%2Flocalhost%3A8890%2FMLC&&Content-Type='application/json'&query=\"+encodeURIComponent(query)\r\n\t\thttp.get(req, (resp) => {\r\n\t\t\tlet data = '';\r\n\t\t\t\r\n\t\t\t// A chunk of data has been received.\r\n\t\t\tresp.on('data', (chunk) => {\r\n\t\t\t\tdata += chunk;\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t// The whole response has been received. Print out the result.\r\n\t\t\tresp\r\n\t\t\t.on('end', () => {\r\n\t\t\t\t// extract the dataset names from html\r\n\r\n\t\t\t\t\tfor (let i = 1; i < data.split('<result>').length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar result = data.split('<result>')[i].split('<literal>');\r\n\r\n\t\t\t\t\t\tvar subList = {\r\n\t\t\t\t\t\t\tid: i,\r\n\t\t\t\t\t\t\tdataset: result[1].split('</literal>')[0],\r\n\t\t\t\t\t\t\talgorithm: result[2].split('</literal>')[0],\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tfor (let j = 0; j < this.state.evaluationMeasureList.length; j++)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// handle range\r\n\t\t\t\t\t\t\tfor (let k = 0; k < this.state.selectedEvaluationMeasures.length; k++)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tif (this.state.selectedEvaluationMeasures[k]['measure'] === this.state.evaluationMeasureList[j])\r\n\t\t\t\t\t\t\t\t{\r\n\r\n\r\n\t\t\t\t\t\t\t\t\tif (this.state.selectedEvaluationMeasures[k]['range'][0] === '>' && this.state.selectedEvaluationMeasures[k]['range'][1] === '=')\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('>=')\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(result[3].split('</literal>')[0].split(\";\")[j].split(\":\")[1])\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(this.state.selectedEvaluationMeasures[k]['range'].substr(2))\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(parseInt(result[3].split('</literal>')[0].split(\";\")[j].split(\":\")[1]) >= this.state.selectedEvaluationMeasures[k]['range'].substr(2))\r\n\t\t\t\t\t\t\t\t\t\t//console.log()\r\n\t\t\t\t\t\t\t\t\t\tif (parseInt(result[3].split('</literal>')[0].split(\";\")[j].split(\":\")[1]) >= this.state.selectedEvaluationMeasures[k]['range'].substr(2))\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"Ne dela?\")\r\n\t\t\t\t\t\t\t\t\t\t\t//subList[result[3].split('</literal>')[0].split(\";\")[j].split(\":\")[0]] = result[3].split('</literal>')[0].split(\";\")[j].split(\":\")[1]\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (this.state.selectedEvaluationMeasures[k]['range'][0] === '<' && this.state.selectedEvaluationMeasures[k]['range'][1] === '=')\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('<=')\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (this.state.selectedEvaluationMeasures[k]['range'][0] === '>')\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('>')\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if(this.state.selectedEvaluationMeasures[k]['range'][0] === '<')\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('<')\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if(this.state.selectedEvaluationMeasures[k]['range'].match(/^\\d+$/))\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('=')\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if(this.state.selectedEvaluationMeasures[k]['range'].match(/^(\\d+-)+\\d+$/))\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('-')\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('blank')\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tsubList[result[3].split('</literal>')[0].split(\";\")[j].split(\":\")[0]] = result[3].split('</literal>')[0].split(\";\")[j].split(\":\")[1]\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (this.state.validationFolds)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// tidy the parameter string\r\n\t\t\t\t\t\t\tvar evaluationParameters = result[4].split('</literal>')[0]\r\n\t\t\t\t\t\t\tevaluationParameters = evaluationParameters.replace(result[1].split('</literal>')[0], \"\").replace(result[2].split('</literal>')[0], \"\").replace(\"_predictive_model_train_test_evaluation_workflow_execution\", \"\").substr(1);\r\n\t\t\t\t\t\t\tevaluationParameters = evaluationParameters.substr(1, evaluationParameters.length - 3);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar wordArray = evaluationParameters.split(\"_\");\r\n\t\t\t\t\t\t\tvar str = wordArray[0]\r\n\t\t\t\t\t\t\tfor (let i = 1; i < wordArray.length; i++)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tif (wordArray[i][0] >= '0' && wordArray[i][0] <= '9')\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tstr += \": \" + wordArray[i]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tif (wordArray[i-1][0] >= '0' && wordArray[i-1][0] <= '9')\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tstr += \", \" + wordArray[i]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tstr += \" \" + wordArray[i]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tsubList['parameters'] = str;\r\n\r\n\t\t\t\t\t\t\t// fold\r\n\t\t\t\t\t\t\tvar fold = result[5].split('</literal>')[0];\r\n\t\t\t\t\t\t\tsubList['fold'] = fold.substr(fold.length-11, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconsole.log(subList)\r\n\t\t\t\t\t\tlist.push(subList);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tspreadSheetRows: list,\r\n\t\t\t\t\t\tspreadSheetColumns: columns,\r\n\t\t\t\t\t\tloadingData: \"none\"\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.on(\"error\", (err) => {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t});\r\n\t}\r\n\r\n\tgetDataFromQuery(){\r\n\t\tvar filterString = \"\"\r\n\t\tfor (let i = 0; i < this.state.selectedDatasets.length; i++) // for datasets\r\n\t\t{\r\n\t\t\tif (i === 0)\r\n\t\t\t\tfilterString += 'Filter (?datasetLabel in (\"'\r\n\t\t\telse\r\n\t\t\t\tfilterString += '\", \"'\r\n\t\t\tfilterString += this.state.selectedDatasets[i]\r\n\t\t\t\r\n\t\t\tif (i === this.state.selectedDatasets.length - 1)\r\n\t\t\t\tfilterString += '\")).'\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < this.state.selectedAlgorithms.length; i++) // for algorithms\r\n\t\t{\r\n\t\t\tif (i === 0)\r\n\t\t\t\tfilterString += 'Filter (?Algorithm in (\"'\r\n\t\t\telse\r\n\t\t\t\tfilterString += '\", \"'\r\n\t\t\tfilterString += this.state.selectedAlgorithms[i]\r\n\t\t\t\r\n\t\t\tif (i === this.state.selectedAlgorithms.length - 1)\r\n\t\t\t\tfilterString += '\")).'\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < this.state.selectedFold.length; i++) // for folds\r\n\t\t{\r\n\t\t\tif (i === 0)\r\n\t\t\t\tfilterString += 'Filter (regex(?Fold, \"['\r\n\t\t\tfilterString += this.state.selectedFold[i]\r\n\t\t\t\r\n\t\t\tif (i === this.state.selectedFold.length - 1)\r\n\t\t\t\tfilterString += ']\")).'\r\n\t\t}\r\n\r\n\t\tif (!this.state.validationFolds)\r\n\t\t{\r\n\t\t\tvar query = `\r\n\t\t\tPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\n\t\t\tPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\n\t\t\t\t\t\r\n\t\t\tSELECT ?datasetLabel ?Algorithm (group_concat( concat(?evaluationMeasureClassLabel , \":\", ?value) ;separator=\";\") as ?EvaluationMeasures)\r\n\t\t\tWHERE {\r\n\t\t\t?trainTestDatasetAssignment <http://purl.obolibrary.org/obo/OBI_0000293> ?dataset.\r\n\t\t\t?trainTestDatasetAssignment ?precedes ?predictiveModelTrainTestEvaluationWorkflowExecution .\r\n\t\t\t?predictiveModelTrainTestEvaluationWorkflowExecution <http://purl.obolibrary.org/obo/BFO_0000051> ?predictiveModelTestSetEvaluationCalculation.\r\n\t\t\t?dataset rdfs:label ?datasetLabelArff .\r\n\t\t\t?predictiveModelTrainTestEvaluationWorkflowExecution <http://purl.obolibrary.org/obo/BFO_0000051> ?predictiveModelingAlgorithmExecution.\r\n\t\t\t?predictiveModelingAlgorithmExecution <http://www.ontodm.com/OntoDM-core/ontoexp_0074> ?Algorithm .\r\n\t\t\t?predictiveModelTestSetEvaluationCalculation rdf:type <http://www.ontodm.com/OntoDM-core/ontoexp_0064>.\r\n\t\t\t?predictiveModelTestSetEvaluationCalculation <http://purl.obolibrary.org/obo/BFO_0000051> ?evaluationMeasuresCalculation.\r\n\t\t\t?evaluationMeasuresCalculation ?realizes ?predictiveModelingEvaluationCalculationImplementation.\r\n\t\t\t?predictiveModelingEvaluationCalculationImplementation ?isConcretizationOf ?evaluationMeasure.\r\n\t\t\t?evaluationMeasure <http://www.ontodm.com/OntoDT#OntoDT_0000240>  ?value.\r\n\t\t\t?evaluationMeasure rdfs:label ?evaluationMeasure_label.\r\n\t\t\t?evaluationMeasure rdf:type ?evaluationMeasureClass .\r\n\t\t\t?evaluationMeasureClass rdfs:label ?evaluationMeasureClassLabel .\r\n\t\t\tBIND(REPLACE(?datasetLabelArff , \".arff\", \"\")  AS ?datasetLabel ).\r\n\t\t\t${filterString}\r\n\t\t\t}\r\n\t\t\tGROUP BY ?datasetLabel ?Algorithm \r\n\t\t\t`\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tquery = `\r\n\t\t\tPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\n\t\t\tPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\n\t\t\t\t\t\r\n\t\t\tSELECT ?datasetLabel ?Algorithm (group_concat( concat(?evaluationMeasureClassLabel , \":\", ?value) ;separator=\";\") as ?EvaluationMeasures) ?TunedParameters ?Fold\r\n\t\t\tWHERE {\r\n\t\t\t\t?foldTestFoldTrainDatasetAssignment <http://www.obofoundry.org/ro/ro.owl#precedes> ?predictiveModelTrainTestEvaluationWorkflowExecution .\r\n\t\t\t\t?foldTestFoldTrainDatasetAssignment rdf:type <http://www.ontodm.com/OntoDM-core/ontoexp_0068>.\r\n\t\t\t\t?foldTestFoldTrainDatasetAssignment ?hasSpecifiedOutput ?foldTest.\r\n\t\t\t\t?foldTest rdf:type <http://www.ontodm.com/OntoDM-core/OntoDM_000144>.\r\n\t\t\t\t?foldTest rdfs:label ?Fold.\r\n\r\n\r\n\t\t\t?trainTestDatasetAssignment <http://purl.obolibrary.org/obo/OBI_0000293> ?dataset.\r\n\t\t\t?trainTestDatasetAssignment ?precedes ?predictiveModelTrainTestEvaluationWorkflowExecution .\r\n\t\t\t?predictiveModelTrainTestEvaluationWorkflowExecution <http://purl.obolibrary.org/obo/BFO_0000051> ?predictiveModelTestSetEvaluationCalculation.\r\n\t\t\t?dataset rdfs:label ?datasetLabelArff .\r\n\t\t\t?predictiveModelTrainTestEvaluationWorkflowExecution <http://purl.obolibrary.org/obo/BFO_0000051> ?predictiveModelingAlgorithmExecution.\r\n\t\t\t?predictiveModelingAlgorithmExecution <http://www.ontodm.com/OntoDM-core/ontoexp_0074> ?Algorithm .\r\n\t\t\t?predictiveModelTestSetEvaluationCalculation rdf:type <http://www.ontodm.com/OntoDM-core/ontoexp_0064>.\r\n\t\t\t?predictiveModelTestSetEvaluationCalculation <http://purl.obolibrary.org/obo/BFO_0000051> ?evaluationMeasuresCalculation.\r\n\t\t\t?evaluationMeasuresCalculation ?realizes ?predictiveModelingEvaluationCalculationImplementation.\r\n\t\t\t?predictiveModelingEvaluationCalculationImplementation ?isConcretizationOf ?evaluationMeasure.\r\n\t\t\t?evaluationMeasure <http://www.ontodm.com/OntoDT#OntoDT_0000240>  ?value.\r\n\r\n\t\t\t?evaluationMeasure rdfs:label ?evaluationMeasure_label.\r\n?evaluationMeasure rdf:type ?evaluationMeasureClass .\r\n?predictiveModelTrainTestEvaluationWorkflowExecution rdfs:label ?TunedParameters.\r\n\r\n\t\t\t?evaluationMeasure rdfs:label ?evaluationMeasure_label.\r\n\t\t\t?evaluationMeasure rdf:type ?evaluationMeasureClass .\r\n\t\t\t?evaluationMeasureClass rdfs:label ?evaluationMeasureClassLabel .\r\n\t\t\tBIND(REPLACE(?datasetLabelArff , \".arff\", \"\")  AS ?datasetLabel ).\r\n\t\t\tFILTER (regex(?Fold, \"test\")).\r\n\t\t\t${filterString}\r\n\t\t\t}\r\n\t\t\tGROUP BY ?datasetLabel ?Algorithm ?TunedParameters ?Fold\r\n\t\t\t`\r\n\t\t}\r\n\r\n\t\tthis.getColumnsAndRows(query)\r\n\t}\r\n\r\n    render()\r\n    {\r\n        return (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div style={{\r\n\t\t\t\tdisplay: this.state.loadingData,\r\n\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Box sx={{ display: 'flex'}}>\r\n\t\t\t\t\t\t<CircularProgress/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</div>\r\n\r\n            <div style={{ height: 650, width: '100%' }}>\r\n            <DataGrid\r\n                rows={this.state.spreadSheetRows}\r\n                columns={this.state.spreadSheetColumns}\r\n                pageSize={10}\r\n                rowsPerPageOptions={[10]}\r\n            />\r\n            </div>\r\n\t\t\t</React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PerformanceDataTable;"]},"metadata":{},"sourceType":"module"}