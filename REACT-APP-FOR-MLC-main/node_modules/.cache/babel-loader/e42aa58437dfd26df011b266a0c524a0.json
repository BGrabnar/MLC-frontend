{"ast":null,"code":"'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nvar calcColorscale = require('../scatter/colorscale_calc');\n\nvar arraysToCalcdata = require('../scatter/arrays_to_calcdata');\n\nvar calcSelection = require('../scatter/calc_selection');\n\nvar calcMarkerSize = require('../scatter/calc').calcMarkerSize;\n\nmodule.exports = function calc(gd, trace) {\n  var fullLayout = gd._fullLayout;\n  var subplotId = trace.subplot;\n  var realAxis = fullLayout[subplotId].realaxis;\n  var imaginaryAxis = fullLayout[subplotId].imaginaryaxis;\n  var realArray = realAxis.makeCalcdata(trace, 'real');\n  var imagArray = imaginaryAxis.makeCalcdata(trace, 'imag');\n  var len = trace._length;\n  var cd = new Array(len);\n\n  for (var i = 0; i < len; i++) {\n    var real = realArray[i];\n    var imag = imagArray[i];\n    var cdi = cd[i] = {};\n\n    if (isNumeric(real) && isNumeric(imag)) {\n      cdi.real = real;\n      cdi.imag = imag;\n    } else {\n      cdi.real = BADNUM;\n    }\n  }\n\n  calcMarkerSize(trace, len);\n  calcColorscale(gd, trace);\n  arraysToCalcdata(cd, trace);\n  calcSelection(cd, trace);\n  return cd;\n};","map":{"version":3,"sources":["C:/Users/Ajax/Desktop/Praksa/React/REACT-APP-FOR-MLC-main/node_modules/plotly.js/src/traces/scattersmith/calc.js"],"names":["isNumeric","require","BADNUM","calcColorscale","arraysToCalcdata","calcSelection","calcMarkerSize","module","exports","calc","gd","trace","fullLayout","_fullLayout","subplotId","subplot","realAxis","realaxis","imaginaryAxis","imaginaryaxis","realArray","makeCalcdata","imagArray","len","_length","cd","Array","i","real","imag","cdi"],"mappings":"AAAA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,2BAAD,CAAP,CAAqCC,MAAlD;;AAEA,IAAIC,cAAc,GAAGF,OAAO,CAAC,4BAAD,CAA5B;;AACA,IAAIG,gBAAgB,GAAGH,OAAO,CAAC,+BAAD,CAA9B;;AACA,IAAII,aAAa,GAAGJ,OAAO,CAAC,2BAAD,CAA3B;;AACA,IAAIK,cAAc,GAAGL,OAAO,CAAC,iBAAD,CAAP,CAA2BK,cAAhD;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAcC,EAAd,EAAkBC,KAAlB,EAAyB;AACtC,MAAIC,UAAU,GAAGF,EAAE,CAACG,WAApB;AACA,MAAIC,SAAS,GAAGH,KAAK,CAACI,OAAtB;AACA,MAAIC,QAAQ,GAAGJ,UAAU,CAACE,SAAD,CAAV,CAAsBG,QAArC;AACA,MAAIC,aAAa,GAAGN,UAAU,CAACE,SAAD,CAAV,CAAsBK,aAA1C;AACA,MAAIC,SAAS,GAAGJ,QAAQ,CAACK,YAAT,CAAsBV,KAAtB,EAA6B,MAA7B,CAAhB;AACA,MAAIW,SAAS,GAAGJ,aAAa,CAACG,YAAd,CAA2BV,KAA3B,EAAkC,MAAlC,CAAhB;AACA,MAAIY,GAAG,GAAGZ,KAAK,CAACa,OAAhB;AACA,MAAIC,EAAE,GAAG,IAAIC,KAAJ,CAAUH,GAAV,CAAT;;AAEA,OAAI,IAAII,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGJ,GAAnB,EAAwBI,CAAC,EAAzB,EAA6B;AACzB,QAAIC,IAAI,GAAGR,SAAS,CAACO,CAAD,CAApB;AACA,QAAIE,IAAI,GAAGP,SAAS,CAACK,CAAD,CAApB;AACA,QAAIG,GAAG,GAAGL,EAAE,CAACE,CAAD,CAAF,GAAQ,EAAlB;;AAEA,QAAG3B,SAAS,CAAC4B,IAAD,CAAT,IAAmB5B,SAAS,CAAC6B,IAAD,CAA/B,EAAuC;AACnCC,MAAAA,GAAG,CAACF,IAAJ,GAAWA,IAAX;AACAE,MAAAA,GAAG,CAACD,IAAJ,GAAWA,IAAX;AACH,KAHD,MAGO;AACHC,MAAAA,GAAG,CAACF,IAAJ,GAAW1B,MAAX;AACH;AACJ;;AAEDI,EAAAA,cAAc,CAACK,KAAD,EAAQY,GAAR,CAAd;AACApB,EAAAA,cAAc,CAACO,EAAD,EAAKC,KAAL,CAAd;AACAP,EAAAA,gBAAgB,CAACqB,EAAD,EAAKd,KAAL,CAAhB;AACAN,EAAAA,aAAa,CAACoB,EAAD,EAAKd,KAAL,CAAb;AAEA,SAAOc,EAAP;AACH,CA7BD","sourcesContent":["'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nvar calcColorscale = require('../scatter/colorscale_calc');\nvar arraysToCalcdata = require('../scatter/arrays_to_calcdata');\nvar calcSelection = require('../scatter/calc_selection');\nvar calcMarkerSize = require('../scatter/calc').calcMarkerSize;\n\nmodule.exports = function calc(gd, trace) {\n    var fullLayout = gd._fullLayout;\n    var subplotId = trace.subplot;\n    var realAxis = fullLayout[subplotId].realaxis;\n    var imaginaryAxis = fullLayout[subplotId].imaginaryaxis;\n    var realArray = realAxis.makeCalcdata(trace, 'real');\n    var imagArray = imaginaryAxis.makeCalcdata(trace, 'imag');\n    var len = trace._length;\n    var cd = new Array(len);\n\n    for(var i = 0; i < len; i++) {\n        var real = realArray[i];\n        var imag = imagArray[i];\n        var cdi = cd[i] = {};\n\n        if(isNumeric(real) && isNumeric(imag)) {\n            cdi.real = real;\n            cdi.imag = imag;\n        } else {\n            cdi.real = BADNUM;\n        }\n    }\n\n    calcMarkerSize(trace, len);\n    calcColorscale(gd, trace);\n    arraysToCalcdata(cd, trace);\n    calcSelection(cd, trace);\n\n    return cd;\n};\n"]},"metadata":{},"sourceType":"script"}