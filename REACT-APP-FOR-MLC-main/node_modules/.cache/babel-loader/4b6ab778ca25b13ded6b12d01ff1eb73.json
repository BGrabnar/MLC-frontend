{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ajax\\\\Desktop\\\\Praksa\\\\React\\\\REACT-APP-FOR-MLC-main\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport BenchmarkDataFilter from './components/BenchmarkDataFilter';\nimport { customTheme } from './components/customTemplate';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { lightTheme, darkTheme } from './components/themes.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Themes() {\n  _s();\n\n  const [theme, setTheme] = useState('light');\n\n  const themeToggler = () => {\n    theme === 'light' ? setTheme(\"dark\") : setTheme('light');\n  };\n}\n\n_s(Themes, \"c/tiXTWXTQispzpG//dV5FX41vQ=\");\n\n_c = Themes;\n;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCallback = data => {\n      this.setState({\n        themes: data\n      });\n      console.log(this.state.themes);\n      this.render();\n    };\n\n    this.state = {\n      themes: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: this.state.themes === 'light' ? lightTheme : darkTheme,\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          callback: this.handleCallback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(BenchmarkDataFilter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"Themes\");","map":{"version":3,"sources":["C:/Users/Ajax/Desktop/Praksa/React/REACT-APP-FOR-MLC-main/src/App.js"],"names":["React","useState","Header","BenchmarkDataFilter","customTheme","ThemeProvider","lightTheme","darkTheme","Themes","theme","setTheme","themeToggler","App","Component","constructor","props","handleCallback","data","setState","themes","console","log","state","render"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,wBAAtC;;;AAEA,SAASC,MAAT,GACA;AAAA;;AACE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,OAAD,CAAlC;;AACA,QAAMU,YAAY,GAAG,MAAM;AACvBF,IAAAA,KAAK,KAAK,OAAV,GAAoBC,QAAQ,CAAC,MAAD,CAA5B,GAAuCA,QAAQ,CAAC,OAAD,CAA/C;AACD,GAFH;AAGD;;GANQF,M;;KAAAA,M;AAMR;;AAED,MAAMI,GAAN,SAAkBZ,KAAK,CAACa,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAClB,UAAMA,KAAN;;AADkB,SAQlBC,cARkB,GAQAC,IAAD,IAAS;AACxB,WAAKC,QAAL,CAAc;AAACC,QAAAA,MAAM,EAAEF;AAAT,OAAd;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWH,MAAvB;AACA,WAAKI,MAAL;AACD,KAZiB;;AAGlB,SAAKD,KAAL,GAAa;AACXH,MAAAA,MAAM,EAAE;AADG,KAAb;AAGC;;AAQDI,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,6BACE,QAAC,aAAD;AAAe,QAAA,KAAK,EAAG,KAAKD,KAAL,CAAWH,MAAX,KAAsB,OAAtB,GAAgCb,UAAhC,GAA6CC,SAApE;AAAA,gCAGM,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAI,KAAKS;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAHN,eAIM,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,gBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AA3B+B;;AA8BlC,eAAeJ,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport './App.css';\nimport Header from './components/Header';\nimport BenchmarkDataFilter from './components/BenchmarkDataFilter'\nimport { customTheme } from './components/customTemplate';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { lightTheme, darkTheme } from './components/themes.js';\n\nfunction Themes()\n{\n  const [theme, setTheme] = useState('light');\n  const themeToggler = () => {\n      theme === 'light' ? setTheme(\"dark\") : setTheme('light')\n    }\n};\n\nclass App extends React.Component {\n  constructor(props){\n  super(props);\n  \n  this.state = {\n    themes: '',\n    }\n  }\n\n  handleCallback = (data) =>{\n    this.setState({themes: data});\n    console.log(this.state.themes)\n    this.render();\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <ThemeProvider theme={ this.state.themes === 'light' ? lightTheme : darkTheme }>\n          \n            \n              <Header callback = {this.handleCallback}/>\n              <BenchmarkDataFilter />    \n            \n        </ThemeProvider>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}